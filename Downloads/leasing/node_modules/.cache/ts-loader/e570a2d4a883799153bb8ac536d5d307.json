{"remainingRequest":"/home/tamanna/htdocs/carconfiguratorfrontend/node_modules/babel-loader/lib/index.js!/home/tamanna/htdocs/carconfiguratorfrontend/node_modules/ts-loader/index.js??ref--14-2!/home/tamanna/htdocs/carconfiguratorfrontend/node_modules/eslint-loader/index.js??ref--13-0!/home/tamanna/htdocs/carconfiguratorfrontend/src/store/options/actions.ts","dependencies":[{"path":"/home/tamanna/htdocs/carconfiguratorfrontend/src/store/options/actions.ts","mtime":1691610165532},{"path":"/home/tamanna/htdocs/carconfiguratorfrontend/node_modules/cache-loader/dist/cjs.js","mtime":1691610247617},{"path":"/home/tamanna/htdocs/carconfiguratorfrontend/node_modules/babel-loader/lib/index.js","mtime":1691610247572},{"path":"/home/tamanna/htdocs/carconfiguratorfrontend/node_modules/ts-loader/index.js","mtime":1691610259533},{"path":"/home/tamanna/htdocs/carconfiguratorfrontend/node_modules/eslint-loader/index.js","mtime":1691610259081}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/home/tamanna/htdocs/carconfiguratorfrontend/node_modules/eslint-loader/index.js??ref--13-0!/home/tamanna/htdocs/carconfiguratorfrontend/src/store/options/actions.ts"],"names":[],"mappings":"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","sourcesContent":["import { ActionContext, ActionTree } from 'vuex'\nimport { Mutations, MutationTypes } from './mutations'\nimport { State } from './index'\nimport { State as RootState, store } from '@/store'\nimport { AuthActionTypes } from '@/store/auth/actions'\nimport authApi from '@/api/Auth'\nimport router from '@/router'\nimport { OptionsConfigurationBodyType, requiredChoiceTitlesType, carBrandsModelType, carOrderAddType, carBrandModelLevelType } from '@/types'\nimport { VueCookieNext } from 'vue-cookie-next'\nexport enum ActionTypes {\n    GET_OPTIONS_CONFIGURATIONS = 'GET_OPTIONS_CONFIGURATIONS',\n    GET_CAR_BRANDS_MODELS = 'GET_CAR_BRANDS_MODELS',\n    ADD_CARORDER = 'ADD_CARORDER',\n    GET_CARSBYID = 'GET_CARSBYID',\n    GET_CARORDERBYID = 'GET_CARORDERBYID',\n    GENERATE_CARORDERPDF = 'GENERATE_CARORDERPDF',\n    DOWNLOAD_CARORDERPDF = 'DOWNLOAD_CARORDERPDF'\n}\n\ntype AugmentedActionContext = {\n    commit<K extends keyof Mutations>(key: K, payload: Parameters<Mutations[K]>[1]): ReturnType<Mutations[K]>;\n} & Omit<ActionContext<State, RootState>, 'commit'>\n\nexport interface Actions {\n    [ActionTypes.GET_OPTIONS_CONFIGURATIONS]({ commit }: AugmentedActionContext, payload: OptionsConfigurationBodyType): void;\n    [ActionTypes.GET_CAR_BRANDS_MODELS]({ commit }: AugmentedActionContext, payload: carBrandModelLevelType[]): void;\n    [ActionTypes.ADD_CARORDER]({ commit }: AugmentedActionContext, payload: { carOrderData: carOrderAddType; id?: number }): void;\n    [ActionTypes.GET_CARSBYID]({ commit }: AugmentedActionContext, payload: { vehicleId: number }): void;\n    [ActionTypes.GET_CARORDERBYID]({ commit }: AugmentedActionContext, payload: { id: number }): void;\n    [ActionTypes.GENERATE_CARORDERPDF]({ commit }: AugmentedActionContext, payload: { lang: string; carOrderId: number }): void;\n    [ActionTypes.DOWNLOAD_CARORDERPDF]({ commit }: AugmentedActionContext, payload: { lang: string; carOrderId: number }): void;\n}\n\nexport const actions: ActionTree<State, RootState> & Actions = {\n    async [ActionTypes.GET_OPTIONS_CONFIGURATIONS]({ commit, state }, options) {\n        commit(MutationTypes.SET_OPTIONS_LOADER, true)\n        const res = await authApi.getOptionsConfiguration(options.vehicleId, options.selectedOptions)\n        if (res['status'] == 'warning') {\n            if (res['message'] == 'Vehicle not found') {\n                commit(MutationTypes.SET_LEASE_RATE_ERROR, res['message'])\n            } else if (res['response'][0] == 'Lease Rate Data not found') {\n                commit(MutationTypes.SET_LEASE_RATE_ERROR, res['response'][0])\n            }\n        }\n        if (res['status'] == 'success' && res.option.length) {\n            state.vehicleId = res['netMonthlyCost']['vehicleDetails']['unique_identity_101']\n            // added all nested options\n            const optionsResponseAsObject = {}\n            if (options.selectedOptions.action == 'added' && options.selectedOptions.option) {\n                store.state.options.nestedOptions = {}\n                options.selectedOptions['userSelectedOptions'].forEach((item) => {\n                    store.state.options.nestedOptions[item] = []\n                })\n                res.option.forEach((item) => {\n                    optionsResponseAsObject[item.optionId] = item\n                })\n                commit(MutationTypes.SET_OPTIONS_RESPONSE_AS_OBJECT, optionsResponseAsObject)\n                // const nestedOptions = res.option\n                //     .filter(item => {\n                //         return item['optionId'].toString() == options.selectedOptions.option\n                //     })\n                //     .map(function (item) {\n                //         return { packMembers: item['packMembers'], required: item['required'] }\n                //     })\n                // if (nestedOptions.length) {\n                //     const flattenArray = [...new Set([...nestedOptions[0]['packMembers'] ?? '', ...nestedOptions[0]['required'] ?? ''])];\n                //     store.state.options.nestedOptions[options.selectedOptions.option] = flattenArray\n                //     store.state.options.nestedOptions[options.selectedOptions.option]?.forEach(element => {\n                //             const oneLevelDeepNestedOptions = res.option\n                //                     .filter(item => {\n                //                         return element.indexOf(item['optionId'].toString()) > -1;\n                //                     })\n                //                     .map(function (item) {\n                //                         return item.packMembers.length || item.required ? { key: options.selectedOptions.option, optionId: item['optionId'], packMembers: item['packMembers'], required: item['required'] } : {}\n                //                     })\n                //                     .filter(item => {\n                //                         return Object.keys(item).length > 0\n                //                     })\n                //             oneLevelDeepNestedOptions.forEach((item) => {\n                //                 const packAndRequired = [...new Set([...item['packMembers'] ?? '', ...item['required'] ?? ''])]\n                //                 packAndRequired.forEach((comboSelection) => {\n                //                     if (item.key != comboSelection)\n                //                         store.state.options.nestedOptions[item.key].push(comboSelection)\n                //                 })\n                //             })\n                //         });\n                // }\n            }\n            // Set Expensive flag and NetMonthlyCost\n            const NetMonthlyCostAndFlag = {\n                expensiveFlag: '',\n                netMonthlyCost: '',\n                fiscalValue: ''\n            }\n            NetMonthlyCostAndFlag.expensiveFlag = res['complyCarResponse']['expensiveFlag']\n            NetMonthlyCostAndFlag.netMonthlyCost = res['netMonthlyCost']['netMonthlyCost']\n            NetMonthlyCostAndFlag.fiscalValue = res['netMonthlyCost']['fiscalValue']\n            store.commit(MutationTypes.SET_NETMONTHLYCOSTANDFLAG, NetMonthlyCostAndFlag)\n            store.commit(MutationTypes.SET_COLORS_FLAG, res['complyCarResponse']['colorSelection'])\n            // pack member\n            const packMembers = res.option\n                .filter(item => {\n                    return item['newState'] === 'selected' || item['newState'] === 'required'\n                })\n                .map(function (item) {\n                    return item['packMembers']\n                })\n            const packMemerArray = packMembers.flat()\n            if (packMemerArray.length > 0) {\n                res.option.forEach(function (option) {\n                    packMemerArray.forEach(function (id) {\n                        if (option['optionId'].toString() == id) {\n                            Object.assign(option, { isPack: true })\n                        }\n                    })\n                })\n            }\n            // pack members titles\n            if (options['packMembers']) {\n                const packMembersTitles = res.option\n                    .filter(function (item) {\n                        return options['packMembers'].indexOf(item['optionId'].toString()) !== -1\n                    })\n                    .map(function (item) {\n                        return { titleEn: item['titleEn'], titleNl: item['titleNl'], code: item['code'] }\n                    })\n                commit(MutationTypes.SET_PACK_MEMBERS_TITLES, packMembersTitles)\n            }\n            // get conflictedOptions\n            options.selectedOptions['userSelectedOptions'].forEach((element) => {\n                const conflictedOptionsDetails = res.option\n                    .filter(item => {\n                        return element.indexOf(item['optionId'].toString()) > -1 && item.newState == 'conflicted'\n                    })\n                    .map(function (item) {\n                        return { titleEn: item['titleEn'], titleNl: item['titleNl'], code: item['code'], optionID: item['optionId'].toString() }\n                    })\n                if (conflictedOptionsDetails.length)\n                    store.state.options.conflictedOptions = conflictedOptionsDetails\n            })\n            // getAll Selected Options\n            const getAllSelectedOptions = res.option\n                .filter(item => {\n                    return item['newState'] === 'selected' || item['newState'] === 'required' || item['isPack'] == true\n                })\n                .map(function (item) {\n                    return item.optionId.toString()\n                })\n            if (!(state.allSelectedOptions.length === getAllSelectedOptions.length && state.allSelectedOptions.every((value, index) => value === getAllSelectedOptions[index])))\n                commit(MutationTypes.SET_ALL_SELECTED_OPTIONS, getAllSelectedOptions)\n            // if required choices not added\n            const notAddedRequiredChoices = res.option\n                .filter(function (item) {\n                    return item['requiredChoices'] && item['requiredChoices'].length\n                })\n                .map(function (item) {\n                    return item['requiredChoices']\n                })\n            // console.log('notAddedRequiredChoices', notAddedRequiredChoices)\n            const requiredChoiceTitlesArray: Array<requiredChoiceTitlesType> = []\n            notAddedRequiredChoices.forEach((choiceArray) => {\n                choiceArray.forEach((choice) => {\n                    const requiredChoiceTitle = res.option\n                        .filter(function (item) {\n                            return choice.indexOf(item['optionId'].toString()) !== -1\n                        })\n                        .map(function (item) {\n                            return { titleEn: item['titleEn'], titleNl: item['titleNl'], code: item['code'], optionId: item['optionId'], price: item['price'], newState: item['newState'], requiredChoices: item['requiredChoices'], packMembers: item['packMembers'] }\n                        })\n                    requiredChoiceTitlesArray.push(requiredChoiceTitle)\n                })\n            })\n            commit(MutationTypes.SET_REQUIRED_CHOICES_TITLES, requiredChoiceTitlesArray)\n            // required choices\n            if (options['selectedCheckbox']) {\n                const selectedOption = options['selectedCheckbox']\n                const requiredChoices = res.option\n                    .filter(function (item) {\n                        return item['optionId'].toString() == selectedOption\n                    })\n                    .map(function (item) {\n                        return item['requiredChoices']\n                    })\n                let parentRequiredChoices\n                if (requiredChoices[0] && requiredChoices[0].length) {\n                    parentRequiredChoices = requiredChoices[0]\n                    if (store.state.options.latestSelection.indexOf(options['selectedCheckbox'].toString()) === -1) {\n                        store.state.options.latestSelection.push(options['selectedCheckbox'])\n                    }\n                } else {\n                    // Nested required choices\n                    const responseRequiredChoices = res.option\n                        .filter((item) => {\n                            return item['requiredChoices'] && item['requiredChoices'].length\n                        })\n                        .map(function (item) {\n                            return item['requiredChoices']\n                        })\n                    // console.log(responseRequiredChoices[0], 'responseRequiredChoices')\n                    if (responseRequiredChoices && responseRequiredChoices[0]) {\n                        parentRequiredChoices = responseRequiredChoices[0]\n                        if (store.state.options.latestSelection.indexOf(options['selectedCheckbox'].toString()) === -1) {\n                            store.state.options.latestSelection.push(options['selectedCheckbox'])\n                        }\n                    } else {\n                        commit(MutationTypes.SET_REQUIRED_CHOICES_TITLES, [])\n                        store.state.options.latestSelection = []\n                    }\n                }\n                const requiredChoiceTitlesArray: Array<requiredChoiceTitlesType> = []\n                parentRequiredChoices?.forEach((choice) => {\n                    const requiredChoiceTitle = res.option\n                        .filter(function (item) {\n                            return choice.indexOf(item['optionId'].toString()) !== -1\n                        })\n                        .map(function (item) {\n                            return { titleEn: item['titleEn'], titleNl: item['titleNl'], code: item['code'], optionId: item['optionId'], price: item['price'], newState: item['newState'], requiredChoices: item['requiredChoices'], packMembers: item['packMembers'] }\n                        })\n                    requiredChoiceTitlesArray.push(requiredChoiceTitle)\n                })\n                commit(MutationTypes.SET_REQUIRED_CHOICES_TITLES, requiredChoiceTitlesArray)\n            }\n            const exteriorInterior = {\n                exteriorColour: [],\n                interiorColour: []\n            }\n            const packageAndOptions = {\n                audioAndEntertainment: [],\n                comfort: [],\n                drivingAndBraking: [],\n                other: [],\n                safety: [],\n                exteriorColour: [],\n                interiorColour: []\n            }\n            const result = {}\n            res.option.forEach(item => {\n                if (!result[item['category']]) {\n                    result[item['category']] = []\n                }\n                result[item['category']].push(item)\n            })\n            commit(MutationTypes.SET_OPTIONS_RESPONSE, res['option'])\n            const getExteriorInteriorTypeP = (data) => {\n                return data?.filter((item) => item['type'] == 'P')\n            }\n            exteriorInterior['exteriorColour'] = result['Exterior colour']\n            exteriorInterior['interiorColour'] = result['Interior colour']\n            packageAndOptions['audioAndEntertainment'] = result['Audio & Entertainment']\n            packageAndOptions['comfort'] = result['Comfort']\n            packageAndOptions['drivingAndBraking'] = result['Driving & braking']\n            packageAndOptions['other'] = result['Other']\n            packageAndOptions['safety'] = result['Safety']\n            packageAndOptions['exteriorColour'] = getExteriorInteriorTypeP(result['Exterior colour'])\n            packageAndOptions['interiorColour'] = getExteriorInteriorTypeP(result['Interior colour'])\n            commit(MutationTypes.SET_OPTIONS, exteriorInterior)\n            commit(MutationTypes.SET_PACKAGESANDOPTIONS, packageAndOptions)\n            // get selectedCongigOptions    \n            const selectedConfigOptions = res.option\n                .filter(item => {\n                    return item['newState'] === 'selected' || item['isPack'] == true || item['newState'] === 'required'\n                })\n                .map(function (item) {\n                    return { code: item['code'], type: item['type'], price: item['price'], priceExcludingVAT: item['priceExcludingVAT'], titleEn: item['titleEn'], titleNl: item['titleNl'], category: item['category'], optionId: item['optionId'] }\n                })\n            commit(MutationTypes.SET_SELECTEDCONFIGOPTIONS, selectedConfigOptions)\n        }\n        commit(MutationTypes.SET_OPTIONS_LOADER, false)\n    },\n    async [ActionTypes.GET_CAR_BRANDS_MODELS]({ commit }) {\n        commit(MutationTypes.SET_OPTIONS_LOADER, true)\n        const res = await authApi.getCarBrandsModels()\n        if (res) {\n            const carBrandAndModels: { value: carBrandsModelType[] } = { value: [] }\n            res.cars.map((item) => {\n                const modelNameArr = []\n                item.models.map((e) => {\n                    modelNameArr.push(e.model)\n                })\n                carBrandAndModels.value.push({ brand: item.brand, models: modelNameArr })\n            })\n            commit(MutationTypes.SET_BRANDS, carBrandAndModels.value)\n            commit(MutationTypes.SET_CAR_BRANDS_MODELS, carBrandAndModels.value)\n            commit(MutationTypes.SET_BRANDS_MODELS_LEVELS, res.cars)\n        }\n        commit(MutationTypes.SET_OPTIONS_LOADER, false)\n    },\n    async [ActionTypes.ADD_CARORDER]({ commit }, { carOrderData, id }) {\n        commit(MutationTypes.SET_OPTIONS_LOADER, true)\n        const params = router.currentRoute.value.params\n        const res = id ? await authApi.carOrderUpdate(carOrderData, id) : await authApi.carOrderAdd(carOrderData)\n\n        let complyResponse: string[] = []\n        //Manually adding message when expensiveFlag = true  \n        if (res.complyCarResponse && res.complyCarResponse.expensiveFlag) {\n            complyResponse.push('Car is too expensive')\n        }\n        // Adding error messages to the array to show popup\n        if (res.complyCarResponse && res.complyCarResponse.complyErrors && res.complyCarResponse.complyErrors.length > 0) {\n            complyResponse = [...complyResponse, ...res.complyCarResponse.complyErrors]\n        }\n\n        store.commit(MutationTypes.SET_COMPLYCARRESPONSE, complyResponse)\n        if (res.status == 'success') {\n            VueCookieNext.setCookie(\"latestcarOrderId\", JSON.stringify(res.carOrderId))\n            if (carOrderData.status == 1) {\n                router.push({ name: 'Step4', params })\n            }\n            else if (carOrderData.status == 0) {\n                router.push({ name: 'Dashboard' })\n            }\n            else if (carOrderData.status == 2) {\n                store.dispatch(ActionTypes.GENERATE_CARORDERPDF, { lang: localStorage.getItem('locale') || 'nl', carOrderId: VueCookieNext.getCookie('latestcarOrderId') })\n                store.dispatch(AuthActionTypes.GET_CURRENT_USER_DETAILS)\n            }\n        }\n        commit(MutationTypes.SET_OPTIONS_LOADER, false)\n    },\n    async [ActionTypes.GET_CARSBYID]({ commit }, data) {\n        commit(MutationTypes.SET_OPTIONS_LOADER, true)\n        const res = await authApi.getCarsByID(data.vehicleId)\n        store.commit(MutationTypes.SET_CARSBYID, res)\n        commit(MutationTypes.SET_OPTIONS_LOADER, false)\n    },\n    async [ActionTypes.GET_CARORDERBYID]({ commit }, data) {\n        commit(MutationTypes.SET_CARORDERLOADER, true)\n        const res = await authApi.getCarOrderDetails(data.id)\n        commit(MutationTypes.SET_CARORDERDETAILSBYID, res.carOrderResponse)\n        commit(MutationTypes.SET_CARORDERLOADER, false)\n    },\n    async [ActionTypes.GENERATE_CARORDERPDF]({ commit }, data) {\n        commit(MutationTypes.SET_CARORDERLOADER, true)\n        await authApi.carOrderGeneratePdf(data.lang, data.carOrderId).then(() => {\n            router.push({ name: 'Dashboard' })\n            commit(MutationTypes.SET_CARORDERSUCCESS, true)\n        })\n        commit(MutationTypes.SET_CARORDERLOADER, false)\n    },\n    async [ActionTypes.DOWNLOAD_CARORDERPDF]({ commit }, data) {\n        commit(MutationTypes.SET_CARORDERLOADER, true)\n        commit(MutationTypes.SET_CARORDERPDFERROR, false)\n        const res = await authApi.carOrderDownloadPdf(data.lang, data.carOrderId)\n        if(res){\n            const FILE = await window.URL.createObjectURL(new Blob([res]));\n            const docUrl = document.createElement('a');\n            docUrl.href = FILE;\n            docUrl.setAttribute('download', 'carOrdered.pdf');\n            document.body.appendChild(docUrl);\n            docUrl.click();\n            commit(MutationTypes.SET_CARORDERLOADER, false)\n        } else {\n            commit(MutationTypes.SET_CARORDERPDFERROR, true)\n            setTimeout(() => {\n                commit(MutationTypes.SET_CARORDERPDFERROR, false)\n            }, 7000);\n        }\n    }\n}\n\n"],"sourceRoot":""}]}