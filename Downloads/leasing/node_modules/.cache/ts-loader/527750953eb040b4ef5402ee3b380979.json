{"remainingRequest":"/home/tamanna/htdocs/carconfiguratorfrontend/node_modules/babel-loader/lib/index.js!/home/tamanna/htdocs/carconfiguratorfrontend/node_modules/ts-loader/index.js??ref--14-2!/home/tamanna/htdocs/carconfiguratorfrontend/node_modules/eslint-loader/index.js??ref--13-0!/home/tamanna/htdocs/carconfiguratorfrontend/src/store/carPolicy/actions.ts","dependencies":[{"path":"/home/tamanna/htdocs/carconfiguratorfrontend/src/store/carPolicy/actions.ts","mtime":1678204643798},{"path":"/home/tamanna/htdocs/carconfiguratorfrontend/node_modules/cache-loader/dist/cjs.js","mtime":1691610247617},{"path":"/home/tamanna/htdocs/carconfiguratorfrontend/node_modules/babel-loader/lib/index.js","mtime":1691610247572},{"path":"/home/tamanna/htdocs/carconfiguratorfrontend/node_modules/ts-loader/index.js","mtime":1691610259533},{"path":"/home/tamanna/htdocs/carconfiguratorfrontend/node_modules/eslint-loader/index.js","mtime":1691610259081}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/home/tamanna/htdocs/carconfiguratorfrontend/node_modules/eslint-loader/index.js??ref--13-0!/home/tamanna/htdocs/carconfiguratorfrontend/src/store/carPolicy/actions.ts"],"names":[],"mappings":"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","sourcesContent":["import { ActionContext, ActionTree } from 'vuex'\nimport { Mutations, carPolicyMutationTypes } from './mutations'\nimport { State } from './index'\nimport type { State as RootState } from '@/store'\nimport authApi from '@/api/Auth'\nimport router from '@/router'\nimport { carPolicyAddRequest, getCarPolicyRequest, carPolicyUpdateRequest, carPolicyDeleteRequest } from '@/types'\n\nexport enum carPolicyActionTypes {\n    ADD_CARPOLICY = 'ADD_CARPOLICY',\n    GET_ALLPOLICIES = 'GET_ALLPOLICIES',\n    UPDATE_CARPOLICY = 'UPDATE_CARPOLICY',\n    DELETE_CARPOLICYDOCUMENT = 'DELETE_CARPOLICYDOCUMENT',\n    DOWNLOAD_CARPOLICYDOCUMENT = 'DOWNLOAD_CARPOLICYDOCUMENT',\n    DELETE_CARPOLICY = 'DELETE_CARPOLICY',\n    GET_CAR_COLORS = 'GET_CAR_COLORS'\n}\n\ntype AugmentedActionContext = {\n    commit<K extends keyof Mutations>(key: K, payload: Parameters<Mutations[K]>[1]): ReturnType<Mutations[K]>;\n} & Omit<ActionContext<State, RootState>, 'commit'>\n\nexport interface Actions {\n    [carPolicyActionTypes.ADD_CARPOLICY]({ commit }: AugmentedActionContext, payload: carPolicyAddRequest): void;\n    [carPolicyActionTypes.GET_ALLPOLICIES]({ commit }: AugmentedActionContext, payload: getCarPolicyRequest): void;\n    [carPolicyActionTypes.UPDATE_CARPOLICY]({ commit }: AugmentedActionContext, payload: carPolicyUpdateRequest): void;\n    [carPolicyActionTypes.DELETE_CARPOLICYDOCUMENT]({ commit }: AugmentedActionContext, payload: carPolicyDeleteRequest): void;\n    [carPolicyActionTypes.DOWNLOAD_CARPOLICYDOCUMENT]({ commit }: AugmentedActionContext, payload: carPolicyDeleteRequest): void;\n    [carPolicyActionTypes.DELETE_CARPOLICY]({ commit }: AugmentedActionContext, payload: carPolicyDeleteRequest): void;\n    [carPolicyActionTypes.GET_CAR_COLORS]({ commit }: AugmentedActionContext ): void;\n}\n\nexport const actions: ActionTree<State, RootState> & Actions = {\n    async [carPolicyActionTypes.ADD_CARPOLICY]({ commit }, carPolicy) {\n        commit(carPolicyMutationTypes.SET_LOADER, true)\n        const res = await authApi.carPolicyAdd(carPolicy.companyId, carPolicy.data)\n        if (res.status == 'success') {\n           router.push({ name: 'CarPolicyOverview' })\n        } else if (res.status == 'error' && res.documentResponse) {\n            commit(carPolicyMutationTypes.SET_DOCUMENT_RESPONSE, res.documentResponse)\n        }\n        commit(carPolicyMutationTypes.SET_LOADER, false)\n    },\n    async [carPolicyActionTypes.GET_ALLPOLICIES]({ commit }, data) {\n        commit(carPolicyMutationTypes.SET_LOADER, true)\n        const res = await authApi.getAllCarPolicies(data.companyId)\n        commit(carPolicyMutationTypes.SET_ALLPOLICIES, res?.carPolicyResponse)\n        commit(carPolicyMutationTypes.SET_LOADER, false)\n    },\n    async [carPolicyActionTypes.UPDATE_CARPOLICY]({ commit }, carPolicy) {\n        commit(carPolicyMutationTypes.SET_LOADER, true)\n        const res = await authApi.carPolicyUpdate(carPolicy.companyId, carPolicy.carPolicyId, carPolicy.data)\n        if (res.status == 'success') {\n            router.push({ name: 'CarPolicyOverview' })\n        } else if (res.status == 'error' && res.documentResponse) {\n            commit(carPolicyMutationTypes.SET_DOCUMENT_RESPONSE, res.documentResponse)\n        }\n        commit(carPolicyMutationTypes.SET_LOADER, false)\n    },\n    async [carPolicyActionTypes.DELETE_CARPOLICYDOCUMENT]({ commit }, carPolicy) {\n        await authApi.deleteCarPolicyDocument(carPolicy.companyId, carPolicy.carPolicyId)\n        commit(carPolicyMutationTypes.SET_LOADER, false)\n    },\n    async [carPolicyActionTypes.DOWNLOAD_CARPOLICYDOCUMENT]({ commit }, carPolicy) {\n        const res = await authApi.downloadCarPolicyDocument(carPolicy.companyId, carPolicy.carPolicyId)\n        const FILE = await window.URL.createObjectURL(new Blob([res]));\n        const docUrl = document.createElement('a');\n        docUrl.href = FILE;\n        docUrl.setAttribute('download', 'document.pdf');\n        document.body.appendChild(docUrl);\n        docUrl.click();\n        commit(carPolicyMutationTypes.SET_LOADER, false)\n    },\n    async [carPolicyActionTypes.DELETE_CARPOLICY]({ commit }, carPolicy) {\n        commit(carPolicyMutationTypes.SET_LOADER, true)\n        const res = await authApi.deleteCarPolicy(carPolicy.companyId, carPolicy.carPolicyId)\n        if (res.carPolicyResponse == 'Car Policy deleted') {\n            router.push({ name: 'CarPolicyOverview' })\n        } else if (res.carPolicyResponse == 'Cannot delete because there are users specified with this Car Policy') {\n            commit(carPolicyMutationTypes.DELETE_CARPOLICYRESPONSE, res.carPolicyResponse)\n        }\n        commit(carPolicyMutationTypes.SET_LOADER, false)\n    },\n    async [carPolicyActionTypes.GET_CAR_COLORS]({ commit }) {\n        commit(carPolicyMutationTypes.SET_LOADER, true)\n        const res = await authApi.getCarColors()\n        commit(carPolicyMutationTypes.SET_CAR_COLORS, res.response)\n        commit(carPolicyMutationTypes.SET_LOADER, false)\n    },\n}\n\n"],"sourceRoot":""}]}