{"remainingRequest":"/home/tamanna/htdocs/carconfiguratorfrontend/node_modules/babel-loader/lib/index.js!/home/tamanna/htdocs/carconfiguratorfrontend/node_modules/ts-loader/index.js??ref--14-2!/home/tamanna/htdocs/carconfiguratorfrontend/node_modules/eslint-loader/index.js??ref--13-0!/home/tamanna/htdocs/carconfiguratorfrontend/src/store/index.ts","dependencies":[{"path":"/home/tamanna/htdocs/carconfiguratorfrontend/src/store/index.ts","mtime":1691610165532},{"path":"/home/tamanna/htdocs/carconfiguratorfrontend/node_modules/cache-loader/dist/cjs.js","mtime":1691610247617},{"path":"/home/tamanna/htdocs/carconfiguratorfrontend/node_modules/babel-loader/lib/index.js","mtime":1691610247572},{"path":"/home/tamanna/htdocs/carconfiguratorfrontend/node_modules/ts-loader/index.js","mtime":1691610259533},{"path":"/home/tamanna/htdocs/carconfiguratorfrontend/node_modules/eslint-loader/index.js","mtime":1691610259081}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3ltYm9sLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3ltYm9sLmRlc2NyaXB0aW9uLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZy5qcyI7CmltcG9ydCB7IGNyZWF0ZVN0b3JlLCB1c2VTdG9yZSBhcyBiYXNlVXNlU3RvcmUgfSBmcm9tICd2dWV4JzsKaW1wb3J0IG9wdGlvbnMgZnJvbSAnLi9vcHRpb25zJzsKaW1wb3J0IGNhclBvbGljeSBmcm9tICcuL2NhclBvbGljeSc7CmltcG9ydCB3aXphcmRTdGVwcyBmcm9tICcuL3dpemFyZFN0ZXBzJzsKaW1wb3J0IGF1dGggZnJvbSAnLi9hdXRoJzsKaW1wb3J0IHVzZXJzIGZyb20gJy4vdXNlcnMnOwppbXBvcnQgbGVhc2VDYXRlZ29yaWVzIGZyb20gJy4vbGVhc2VDYXRlZ29yaWVzJzsKaW1wb3J0IHVzZXJDYXJzIGZyb20gJy4vdXNlckNhcnMnOwppbXBvcnQgY29tcGFueSBmcm9tICcuL2NvbXBhbnknOwppbXBvcnQgc3VwZXJBZG1pbkNvbXBhbnkgZnJvbSAnLi9zdXBlckFkbWluQ29tcGFueSc7CmltcG9ydCB0YXhTZXR0aW5ncyBmcm9tICcuL3RheFNldHRpbmdzJzsKaW1wb3J0IGRpc2NvdW50cyBmcm9tICcuL2Rpc2NvdW50cyc7CmltcG9ydCBvcmRlcnMgZnJvbSAnLi9vcmRlcnMnOwpleHBvcnQgdmFyIGtleSA9IFN5bWJvbCgnc3RvcmUnKTsKZXhwb3J0IHZhciBzdG9yZSA9IGNyZWF0ZVN0b3JlKHsKICBtb2R1bGVzOiB7CiAgICBvcHRpb25zOiBvcHRpb25zLAogICAgY2FyUG9saWN5OiBjYXJQb2xpY3ksCiAgICB3aXphcmRTdGVwczogd2l6YXJkU3RlcHMsCiAgICBhdXRoOiBhdXRoLAogICAgdXNlcnM6IHVzZXJzLAogICAgbGVhc2VDYXRlZ29yaWVzOiBsZWFzZUNhdGVnb3JpZXMsCiAgICB1c2VyQ2FyczogdXNlckNhcnMsCiAgICBjb21wYW55OiBjb21wYW55LAogICAgc3VwZXJBZG1pbkNvbXBhbnk6IHN1cGVyQWRtaW5Db21wYW55LAogICAgdGF4U2V0dGluZ3M6IHRheFNldHRpbmdzLAogICAgZGlzY291bnRzOiBkaXNjb3VudHMsCiAgICBvcmRlcnM6IG9yZGVycwogIH0KfSk7CmV4cG9ydCBmdW5jdGlvbiB1c2VTdG9yZSgpIHsKICByZXR1cm4gYmFzZVVzZVN0b3JlKGtleSk7Cn0="},{"version":3,"sources":["/home/tamanna/htdocs/carconfiguratorfrontend/node_modules/eslint-loader/index.js??ref--13-0!/home/tamanna/htdocs/carconfiguratorfrontend/src/store/index.ts"],"names":[],"mappings":";;;AACA,SAAS,WAAT,EAAsB,QAAQ,IAAI,YAAlC,QAA6D,MAA7D;AACA,OAAO,OAAP,MAAsE,WAAtE;AACA,OAAO,SAAP,MAA4E,aAA5E;AACA,OAAO,WAAP,MAAkF,eAAlF;AACA,OAAO,IAAP,MAA6D,QAA7D;AACA,OAAO,KAAP,MAAgE,SAAhE;AACA,OAAO,eAAP,MAA4F,mBAA5F;AACA,OAAO,QAAP,MAAyE,YAAzE;AACA,OAAO,OAAP,MAAsE,WAAtE;AACA,OAAO,iBAAP,MAAoG,qBAApG;AACA,OAAO,WAAP,MAAkF,eAAlF;AACA,OAAO,SAAP,MAA0E,aAA1E;AACA,OAAO,MAAP,MAAmE,UAAnE;AAgCA,OAAO,IAAM,GAAG,GAA+B,MAAM,CAAC,OAAD,CAA9C;AAEP,OAAO,IAAM,KAAK,GAAG,WAAW,CAAQ;AACtC,EAAA,OAAO,EAAE;AACP,IAAA,OAAO,EAAP,OADO;AAEP,IAAA,SAAS,EAAT,SAFO;AAGP,IAAA,WAAW,EAAX,WAHO;AAIP,IAAA,IAAI,EAAJ,IAJO;AAKP,IAAA,KAAK,EAAL,KALO;AAMP,IAAA,eAAe,EAAf,eANO;AAOP,IAAA,QAAQ,EAAR,QAPO;AAQP,IAAA,OAAO,EAAP,OARO;AASP,IAAA,iBAAiB,EAAjB,iBATO;AAUP,IAAA,WAAW,EAAX,WAVO;AAWP,IAAA,SAAS,EAAT,SAXO;AAYP,IAAA,MAAM,EAAN;AAZO;AAD6B,CAAR,CAAzB;AAiBP,OAAM,SAAU,QAAV,GAAkB;AACtB,SAAO,YAAY,CAAC,GAAD,CAAnB;AACD","sourcesContent":["import { InjectionKey } from 'vue'\nimport { createStore, useStore as baseUseStore, Store } from 'vuex'\nimport options, { State as OptionsState, Store as OptionsStore } from './options'\nimport carPolicy, { State as CarPolicyState, Store as CarPolicyStore } from './carPolicy'\nimport wizardSteps, { State as WizardStepsState, Store as WizardStepsStore } from './wizardSteps'\nimport auth, { State as authState, Store as authStore } from './auth'\nimport users, { State as usersState, Store as usersStore } from './users'\nimport leaseCategories, { State as leaseCategoryState, Store as leaseCategoriesStore } from './leaseCategories'\nimport userCars, { State as userCarsState, Store as userCarsStore } from './userCars'\nimport company, { State as companyState, Store as companyStore } from './company' \nimport superAdminCompany, { State as superAdminCompanyState, Store as superAdminCompanyStore } from './superAdminCompany' \nimport taxSettings, { State as taxSettingsState, Store as taxSettingsStore } from './taxSettings'\nimport discounts, { State as discountState, Store as discountStore } from './discounts'\nimport orders, { State as ordersState, Store as ordersStore } from './orders'\n\n\nexport interface State {\n  options: OptionsState;\n  carPolicy: CarPolicyState;\n  wizardSteps: WizardStepsState;\n  auth: authState;\n  users: usersState;\n  leaseCategories: leaseCategoryState;\n  userCars: userCarsState;\n  company: companyState;\n  superAdminCompany: superAdminCompanyState;\n  taxSettings: taxSettingsState;\n  discounts: discountState;\n  orders: ordersState;\n}\n\nexport type RootStore = OptionsStore<Pick<State, 'options'>>\nexport type RootStoreCarPolicy = CarPolicyStore<Pick<State, 'options'>>\nexport type RootStoreWizardSteps = WizardStepsStore<Pick<State, 'options'>>\nexport type RootStoreAuth = authStore<Pick<State, 'options'>>\nexport type RootStoreUsers = usersStore<Pick<State, 'options'>>\nexport type RootStoreLeaseCategories = leaseCategoriesStore<Pick<State, 'options'>>\nexport type RootUserCarsStore = userCarsStore<Pick<State, 'options'>>\nexport type RootCompanyStore = companyStore<Pick<State, 'options'>>\nexport type RootsuperAdminCompanyStore = superAdminCompanyStore<Pick<State, 'options'>>\nexport type RoottaxSettingsStore = taxSettingsStore<Pick<State, 'options'>>\nexport type RootdiscountStore = discountStore<Pick<State, 'options'>>\nexport type RootordersStore = ordersStore<Pick<State, 'options'>>\n\n\nexport const key: InjectionKey<Store<State>> = Symbol('store')\n\nexport const store = createStore<State>({\n  modules: {\n    options,\n    carPolicy,\n    wizardSteps,\n    auth,\n    users,\n    leaseCategories,\n    userCars,\n    company,\n    superAdminCompany,\n    taxSettings,\n    discounts,\n    orders\n  }\n})\n\nexport function useStore() {\n  return baseUseStore(key)\n}"],"sourceRoot":""}]}