{"remainingRequest":"/home/tamanna/htdocs/carconfiguratorfrontend/node_modules/babel-loader/lib/index.js!/home/tamanna/htdocs/carconfiguratorfrontend/node_modules/ts-loader/index.js??ref--14-2!/home/tamanna/htdocs/carconfiguratorfrontend/node_modules/eslint-loader/index.js??ref--13-0!/home/tamanna/htdocs/carconfiguratorfrontend/src/store/superAdminCompany/actions.ts","dependencies":[{"path":"/home/tamanna/htdocs/carconfiguratorfrontend/src/store/superAdminCompany/actions.ts","mtime":1678204643798},{"path":"/home/tamanna/htdocs/carconfiguratorfrontend/node_modules/cache-loader/dist/cjs.js","mtime":1691610247617},{"path":"/home/tamanna/htdocs/carconfiguratorfrontend/node_modules/babel-loader/lib/index.js","mtime":1691610247572},{"path":"/home/tamanna/htdocs/carconfiguratorfrontend/node_modules/ts-loader/index.js","mtime":1691610259533},{"path":"/home/tamanna/htdocs/carconfiguratorfrontend/node_modules/eslint-loader/index.js","mtime":1691610259081}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/home/tamanna/htdocs/carconfiguratorfrontend/node_modules/eslint-loader/index.js??ref--13-0!/home/tamanna/htdocs/carconfiguratorfrontend/src/store/superAdminCompany/actions.ts"],"names":[],"mappings":"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","sourcesContent":["import { ActionContext, ActionTree } from 'vuex'\nimport { Mutations, superAdminMutationTypes } from './mutations'\nimport { State } from './index'\nimport type { State as RootState } from '@/store'\nimport authApi from '@/api/Auth'\nimport router from '@/router'\nimport { userQuery, companyAddRequest, companyLeaseRateAdd, employeeUserResponseType, uploadLeaseRateBodyType, userQueryType } from '@/types'\n\nexport enum superAdminCompanyActionTypes {\n    GET_ALLCOMPANIES = 'GET_ALLCOMPANIES',\n    ADD_COMPANY = 'ADD_COMPANY',\n    UPDATE_COMPANY = 'UPDATE_COMPANY',\n    ADD_COMPANY_USER = 'ADD_COMPANY_USER',\n    ADD_COMPANY_LEASERATE = 'ADD_COMPANY_LEASERATE',\n    GET_COMPANY_LEASERATE = 'GET_COMPANY_LEASERATE',\n    UPDATE_COMPANY_LEASERATE = 'UPDATE_COMPANY_LEASERATE',\n    DELETE_COMPANY_LOGO = 'DELETE_COMPANY_LOGO',\n    UPLOAD_LEASERATE = 'UPLOAD_LEASERATE',\n    GET_NOTINLEASERATE = 'GET_NOTINLEASERATE'\n}\n\ntype AugmentedActionContext = {\n    commit<K extends keyof Mutations>(key: K, payload: Parameters<Mutations[K]>[1]): ReturnType<Mutations[K]>;\n} & Omit<ActionContext<State, RootState>, 'commit'>\n\nexport interface Actions {\n    [superAdminCompanyActionTypes.GET_ALLCOMPANIES]({ commit }: AugmentedActionContext, payload: userQuery): void;\n    [superAdminCompanyActionTypes.ADD_COMPANY]({ commit }: AugmentedActionContext, payload: { body: companyAddRequest }): void;\n    [superAdminCompanyActionTypes.UPDATE_COMPANY]({ commit }: AugmentedActionContext, payload: { companyId: number; body: companyAddRequest }): void;\n    [superAdminCompanyActionTypes.ADD_COMPANY_USER]({ commit }: AugmentedActionContext, payload: { companyId: number; body: employeeUserResponseType; lang: string }): void;\n    [superAdminCompanyActionTypes.ADD_COMPANY_LEASERATE]({ commit }: AugmentedActionContext, payload: { companyId: number; body: companyLeaseRateAdd }): void;\n    [superAdminCompanyActionTypes.UPDATE_COMPANY_LEASERATE]({ commit }: AugmentedActionContext, payload: { companyId: number; leaseRateId: number; body: companyLeaseRateAdd }): void;\n    [superAdminCompanyActionTypes.GET_COMPANY_LEASERATE]({ commit }: AugmentedActionContext, payload: { companyId: number }): void;\n    [superAdminCompanyActionTypes.DELETE_COMPANY_LOGO]({ commit }: AugmentedActionContext, payload: { companyId: number }): void;\n    [superAdminCompanyActionTypes.UPLOAD_LEASERATE]({ commit }: AugmentedActionContext, payload: { body: uploadLeaseRateBodyType }): void;\n    [superAdminCompanyActionTypes.GET_NOTINLEASERATE]({ commit }: AugmentedActionContext, payload: { query: userQueryType } ): void;\n}\n\nexport const actions: ActionTree<State, RootState> & Actions = {\n    async [superAdminCompanyActionTypes.GET_ALLCOMPANIES]({ commit }, data) {\n        commit(superAdminMutationTypes.SET_LOADER, true)\n        const res = await authApi.getAllCompanies(data.query)\n        commit(superAdminMutationTypes.SET_ALL_COMPANIES, res.companyResponse)\n        commit(superAdminMutationTypes.SET_ALL_TOTAL_COMPANIES, res.totalRecords)\n        commit(superAdminMutationTypes.SET_LOADER, false)\n    },\n    async [superAdminCompanyActionTypes.ADD_COMPANY]({ commit }, data) {\n        commit(superAdminMutationTypes.SET_LOADER, true)\n        const res = await authApi.companyAdd(data.body)\n        commit(superAdminMutationTypes.SET_SUPERADMIN_COMPANYID, null)\n        commit(superAdminMutationTypes.SET_COMPANY_ERROR, '')\n        if (res.companyId) {\n            commit(superAdminMutationTypes.SET_SUPERADMIN_COMPANYID, res.companyId)\n        } else {\n            commit(superAdminMutationTypes.SET_COMPANY_ERROR, res.companyResponse)\n        }\n        commit(superAdminMutationTypes.SET_LOADER, false)\n    },\n    async [superAdminCompanyActionTypes.UPDATE_COMPANY]({ commit }, data) {\n        const res = await authApi.companyUpdate(data.companyId, data.body)\n        if (res.companyResponse !== 'Company updated') {\n            commit(superAdminMutationTypes.SET_COMPANY_ERROR, res.companyResponse)\n        }\n    },\n    async [superAdminCompanyActionTypes.DELETE_COMPANY_LOGO]({ commit }, data) {\n        commit(superAdminMutationTypes.SET_LOADER, true)\n        await authApi.deleteCompanyLogoById(data.companyId)\n        commit(superAdminMutationTypes.SET_LOADER, false)\n    },\n    async [superAdminCompanyActionTypes.ADD_COMPANY_USER]({ commit }, data) {\n        commit(superAdminMutationTypes.SET_LOADER, true)\n        const res = await authApi.addUser(data.companyId, data.body, data.lang)\n        commit(superAdminMutationTypes.SET_USER_ERROR, '')\n        if (res.status != 'success') {\n            commit(superAdminMutationTypes.SET_USER_ERROR, res.userResponse)\n        } else {\n            router.push({ name: 'Companies', query: { page: 1 } })\n        }\n        commit(superAdminMutationTypes.SET_LOADER, false)\n    },\n    async [superAdminCompanyActionTypes.ADD_COMPANY_LEASERATE]({ commit }, data) {\n        const res = await authApi.companyLeaseRateAdd(data.companyId, data.body)\n        if (res.status == 'error') {\n           commit(superAdminMutationTypes.SET_LEASE_RATE_ERROR, res.companyLeaseRateResponse)\n        }\n    },\n    async [superAdminCompanyActionTypes.UPDATE_COMPANY_LEASERATE]({ commit }, data) {\n        const res = await authApi.companyLeaseRateUpdate(data.companyId, data.leaseRateId, data.body)\n        if (res.companyLeaseRateResponse == 'Company Lease Rate updated') {\n            router.push({ name: 'Companies', query: { page: 1 } })\n        } else if (res.status == 'error') {\n            commit(superAdminMutationTypes.SET_LEASE_RATE_ERROR, res.companyLeaseRateResponse)\n        }\n    },\n    async [superAdminCompanyActionTypes.GET_COMPANY_LEASERATE]({ commit }, data) {\n        commit(superAdminMutationTypes.SET_LOADER, true)\n        const res = await authApi.getCompanyLeaseRate(data.companyId)\n        if (Array.isArray(res.companyLeaseRateResponse)) {\n            commit(superAdminMutationTypes.SET_COMPANY_LEASE_RATE, res.companyLeaseRateResponse[0])\n        }   \n        commit(superAdminMutationTypes.SET_LOADER, false)\n    },\n    async [superAdminCompanyActionTypes.UPLOAD_LEASERATE]({ commit }, data) {\n        commit(superAdminMutationTypes.SET_LEASERATEDATA_LOADER, true)\n        const res = await authApi.uploadLeaseRate(data.body)\n        commit(superAdminMutationTypes.SET_LEASERATEDATA_RESPONSE, res.status)\n        authApi.logLeaseRate()\n        commit(superAdminMutationTypes.SET_LEASERATEDATA_MSG, res.leaseRateResponse)\n        commit(superAdminMutationTypes.SET_LEASERATEDATA_LOADER, false)\n    },\n    async [superAdminCompanyActionTypes.GET_NOTINLEASERATE]({ commit }, data) {\n        commit(superAdminMutationTypes.SET_LOADER, true)\n        await authApi.getNotInLeaseRateData(data.query).then((res) => { \n            commit(superAdminMutationTypes.SET_NOTINLEASERATE_DATA, res['leaseRateResponse'])\n        })\n        commit(superAdminMutationTypes.SET_LOADER, false)\n    }\n}\n\n"],"sourceRoot":""}]}