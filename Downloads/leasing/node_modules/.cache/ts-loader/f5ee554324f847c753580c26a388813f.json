{"remainingRequest":"/home/tamanna/htdocs/carconfiguratorfrontend/node_modules/babel-loader/lib/index.js!/home/tamanna/htdocs/carconfiguratorfrontend/node_modules/ts-loader/index.js??ref--14-2!/home/tamanna/htdocs/carconfiguratorfrontend/node_modules/eslint-loader/index.js??ref--13-0!/home/tamanna/htdocs/carconfiguratorfrontend/src/filters/CurrencyFormatWithCurrencyHidden.ts","dependencies":[{"path":"/home/tamanna/htdocs/carconfiguratorfrontend/src/filters/CurrencyFormatWithCurrencyHidden.ts","mtime":1678204643794},{"path":"/home/tamanna/htdocs/carconfiguratorfrontend/node_modules/cache-loader/dist/cjs.js","mtime":1691610247617},{"path":"/home/tamanna/htdocs/carconfiguratorfrontend/node_modules/babel-loader/lib/index.js","mtime":1691610247572},{"path":"/home/tamanna/htdocs/carconfiguratorfrontend/node_modules/ts-loader/index.js","mtime":1691610259533},{"path":"/home/tamanna/htdocs/carconfiguratorfrontend/node_modules/eslint-loader/index.js","mtime":1691610259081}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMucmVnZXhwLmV4ZWMuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5zdHJpbmcucmVwbGFjZS5qcyI7CmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uICh2YWx1ZSkgewogIGlmICh2YWx1ZSAhPT0gbnVsbCkgewogICAgdmFyIGZvcm1hdHRlciA9IG5ldyBJbnRsLk51bWJlckZvcm1hdCgnbmwtTkwnLCB7CiAgICAgIHN0eWxlOiAnY3VycmVuY3knLAogICAgICBjdXJyZW5jeTogJ0VVUicKICAgIH0pOwogICAgcmV0dXJuIGZvcm1hdHRlci5mb3JtYXQodmFsdWUpLnJlcGxhY2UoJ+KCrCcsICcnKTsKICB9Cn0="},{"version":3,"sources":["/home/tamanna/htdocs/carconfiguratorfrontend/node_modules/eslint-loader/index.js??ref--13-0!/home/tamanna/htdocs/carconfiguratorfrontend/src/filters/CurrencyFormatWithCurrencyHidden.ts"],"names":[],"mappings":";;AAAA,eAAc,UAAW,KAAX,EAAgB;AAC1B,MAAI,KAAK,KAAK,IAAd,EAAoB;AAChB,QAAM,SAAS,GAAG,IAAI,IAAI,CAAC,YAAT,CAAsB,OAAtB,EAA+B;AAC7C,MAAA,KAAK,EAAE,UADsC;AAE7C,MAAA,QAAQ,EAAE;AAFmC,KAA/B,CAAlB;AAIA,WAAO,SAAS,CAAC,MAAV,CAAiB,KAAjB,EAAwB,OAAxB,CAAgC,GAAhC,EAAqC,EAArC,CAAP;AACH;AACJ","sourcesContent":["export default function (value) {\n    if (value !== null) {\n        const formatter = new Intl.NumberFormat('nl-NL', {\n            style: 'currency',\n            currency: 'EUR'\n        })\n        return formatter.format(value).replace('â‚¬', '')\n    }\n}"],"sourceRoot":""}]}