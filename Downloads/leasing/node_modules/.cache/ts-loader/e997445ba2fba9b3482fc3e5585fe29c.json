{"remainingRequest":"/home/tamanna/htdocs/carconfiguratorfrontend/node_modules/babel-loader/lib/index.js!/home/tamanna/htdocs/carconfiguratorfrontend/node_modules/ts-loader/index.js??ref--14-2!/home/tamanna/htdocs/carconfiguratorfrontend/node_modules/eslint-loader/index.js??ref--13-0!/home/tamanna/htdocs/carconfiguratorfrontend/src/store/carPolicy/mutations.ts","dependencies":[{"path":"/home/tamanna/htdocs/carconfiguratorfrontend/src/store/carPolicy/mutations.ts","mtime":1678204643798},{"path":"/home/tamanna/htdocs/carconfiguratorfrontend/node_modules/cache-loader/dist/cjs.js","mtime":1691610247617},{"path":"/home/tamanna/htdocs/carconfiguratorfrontend/node_modules/babel-loader/lib/index.js","mtime":1691610247572},{"path":"/home/tamanna/htdocs/carconfiguratorfrontend/node_modules/ts-loader/index.js","mtime":1691610259533},{"path":"/home/tamanna/htdocs/carconfiguratorfrontend/node_modules/eslint-loader/index.js","mtime":1691610259081}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9kZWZpbmVQcm9wZXJ0eSBmcm9tICIvaG9tZS90YW1hbm5hL2h0ZG9jcy9jYXJjb25maWd1cmF0b3Jmcm9udGVuZC9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vZGVmaW5lUHJvcGVydHkiOwoKdmFyIF9tdXRhdGlvbnM7CgpleHBvcnQgdmFyIGNhclBvbGljeU11dGF0aW9uVHlwZXM7CgooZnVuY3Rpb24gKGNhclBvbGljeU11dGF0aW9uVHlwZXMpIHsKICBjYXJQb2xpY3lNdXRhdGlvblR5cGVzWyJTRVRfTE9BREVSIl0gPSAiU0VUX0xPQURFUiI7CiAgY2FyUG9saWN5TXV0YXRpb25UeXBlc1siU0VUX0FMTFBPTElDSUVTIl0gPSAiR0VUX0FMTFBPTElDSUVTIjsKICBjYXJQb2xpY3lNdXRhdGlvblR5cGVzWyJERUxFVEVfQ0FSUE9MSUNZUkVTUE9OU0UiXSA9ICJERUxFVEVfQ0FSUE9MSUNZUkVTUE9OU0UiOwogIGNhclBvbGljeU11dGF0aW9uVHlwZXNbIlNFVF9ET0NVTUVOVF9SRVNQT05TRSJdID0gIlNFVF9ET0NVTUVOVF9SRVNQT05TRSI7CiAgY2FyUG9saWN5TXV0YXRpb25UeXBlc1siU0VUX0NBUl9DT0xPUlMiXSA9ICJTRVRfQ0FSX0NPTE9SUyI7Cn0pKGNhclBvbGljeU11dGF0aW9uVHlwZXMgfHwgKGNhclBvbGljeU11dGF0aW9uVHlwZXMgPSB7fSkpOwoKZXhwb3J0IHZhciBtdXRhdGlvbnMgPSAoX211dGF0aW9ucyA9IHt9LCBfZGVmaW5lUHJvcGVydHkoX211dGF0aW9ucywgY2FyUG9saWN5TXV0YXRpb25UeXBlcy5TRVRfTE9BREVSLCBmdW5jdGlvbiAoc3RhdGUsIHBheWxvYWQpIHsKICBzdGF0ZS5sb2FkZXIgPSBwYXlsb2FkOwp9KSwgX2RlZmluZVByb3BlcnR5KF9tdXRhdGlvbnMsIGNhclBvbGljeU11dGF0aW9uVHlwZXMuU0VUX0FMTFBPTElDSUVTLCBmdW5jdGlvbiAoc3RhdGUsIHBheWxvYWQpIHsKICBzdGF0ZS5nZXRBbGxDYXJQb2xpY2llcyA9IHBheWxvYWQ7Cn0pLCBfZGVmaW5lUHJvcGVydHkoX211dGF0aW9ucywgY2FyUG9saWN5TXV0YXRpb25UeXBlcy5ERUxFVEVfQ0FSUE9MSUNZUkVTUE9OU0UsIGZ1bmN0aW9uIChzdGF0ZSwgcGF5bG9hZCkgewogIHN0YXRlLmRlbGV0ZUNhclBvbGljeVJlc3BvbnNlID0gcGF5bG9hZDsKfSksIF9kZWZpbmVQcm9wZXJ0eShfbXV0YXRpb25zLCBjYXJQb2xpY3lNdXRhdGlvblR5cGVzLlNFVF9ET0NVTUVOVF9SRVNQT05TRSwgZnVuY3Rpb24gKHN0YXRlLCBwYXlsb2FkKSB7CiAgc3RhdGUuZG9jdW1lbnRSZXNwb25zZSA9IHBheWxvYWQ7Cn0pLCBfZGVmaW5lUHJvcGVydHkoX211dGF0aW9ucywgY2FyUG9saWN5TXV0YXRpb25UeXBlcy5TRVRfQ0FSX0NPTE9SUywgZnVuY3Rpb24gKHN0YXRlLCBwYXlsb2FkKSB7CiAgc3RhdGUuY2FyQ29sb3JzID0gcGF5bG9hZDsKfSksIF9tdXRhdGlvbnMpOw=="},{"version":3,"sources":["/home/tamanna/htdocs/carconfiguratorfrontend/node_modules/eslint-loader/index.js??ref--13-0!/home/tamanna/htdocs/carconfiguratorfrontend/src/store/carPolicy/mutations.ts"],"names":[],"mappings":";;;;AAIA,OAAA,IAAY,sBAAZ;;AAAA,CAAA,UAAY,sBAAZ,EAAkC;AAC9B,EAAA,sBAAA,CAAA,YAAA,CAAA,GAAA,YAAA;AACA,EAAA,sBAAA,CAAA,iBAAA,CAAA,GAAA,iBAAA;AACA,EAAA,sBAAA,CAAA,0BAAA,CAAA,GAAA,0BAAA;AACA,EAAA,sBAAA,CAAA,uBAAA,CAAA,GAAA,uBAAA;AACA,EAAA,sBAAA,CAAA,gBAAA,CAAA,GAAA,gBAAA;AACH,CAND,EAAY,sBAAsB,KAAtB,sBAAsB,GAAA,EAAA,CAAlC;;AAgBA,OAAO,IAAM,SAAS,iDACjB,sBAAsB,CAAC,UADN,YACkB,KADlB,EACyB,OADzB,EACgC;AAC9C,EAAA,KAAK,CAAC,MAAN,GAAe,OAAf;AACH,CAHiB,+BAIjB,sBAAsB,CAAC,eAJN,YAIuB,KAJvB,EAI8B,OAJ9B,EAIqC;AACnD,EAAA,KAAK,CAAC,iBAAN,GAA0B,OAA1B;AACH,CANiB,+BAOjB,sBAAsB,CAAC,wBAPN,YAOgC,KAPhC,EAOuC,OAPvC,EAO8C;AAC5D,EAAA,KAAK,CAAC,uBAAN,GAAgC,OAAhC;AACH,CATiB,+BAUjB,sBAAsB,CAAC,qBAVN,YAU6B,KAV7B,EAUoC,OAVpC,EAU2C;AACzD,EAAA,KAAK,CAAC,gBAAN,GAAyB,OAAzB;AACH,CAZiB,+BAajB,sBAAsB,CAAC,cAbN,YAasB,KAbtB,EAa6B,OAb7B,EAaoC;AAClD,EAAA,KAAK,CAAC,SAAN,GAAkB,OAAlB;AACH,CAfiB,cAAf","sourcesContent":["import { MutationTree } from 'vuex'\nimport { State } from './index'\nimport { carPolicyResponseType } from '@/types'\n\nexport enum carPolicyMutationTypes {\n    SET_LOADER = 'SET_LOADER',\n    SET_ALLPOLICIES = 'GET_ALLPOLICIES',\n    DELETE_CARPOLICYRESPONSE = 'DELETE_CARPOLICYRESPONSE',\n    SET_DOCUMENT_RESPONSE = 'SET_DOCUMENT_RESPONSE',\n    SET_CAR_COLORS = 'SET_CAR_COLORS'\n}\n\nexport type Mutations<S = State> = {\n    [carPolicyMutationTypes.SET_LOADER](state: S, payload: boolean): void;\n    [carPolicyMutationTypes.SET_ALLPOLICIES](state: S, payload: carPolicyResponseType[]): void;\n    [carPolicyMutationTypes.DELETE_CARPOLICYRESPONSE](state: S, payload: string): void;\n    [carPolicyMutationTypes.SET_DOCUMENT_RESPONSE](state: S, payload: string): void;\n    [carPolicyMutationTypes.SET_CAR_COLORS](state: S, payload: Array<string>): void;\n}\n\nexport const mutations: MutationTree<State> & Mutations = {\n    [carPolicyMutationTypes.SET_LOADER](state, payload) {\n        state.loader = payload\n    },\n    [carPolicyMutationTypes.SET_ALLPOLICIES](state, payload) {\n        state.getAllCarPolicies = payload\n    },\n    [carPolicyMutationTypes.DELETE_CARPOLICYRESPONSE](state, payload) {\n        state.deleteCarPolicyResponse = payload\n    },\n    [carPolicyMutationTypes.SET_DOCUMENT_RESPONSE](state, payload) {\n        state.documentResponse = payload\n    },\n    [carPolicyMutationTypes.SET_CAR_COLORS](state, payload) {\n        state.carColors = payload\n    }\n}\n"],"sourceRoot":""}]}