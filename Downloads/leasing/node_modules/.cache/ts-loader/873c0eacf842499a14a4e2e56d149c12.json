{"remainingRequest":"/home/tamanna/htdocs/carconfiguratorfrontend/node_modules/babel-loader/lib/index.js!/home/tamanna/htdocs/carconfiguratorfrontend/node_modules/ts-loader/index.js??ref--14-2!/home/tamanna/htdocs/carconfiguratorfrontend/node_modules/eslint-loader/index.js??ref--13-0!/home/tamanna/htdocs/carconfiguratorfrontend/src/store/taxSettings/mutations.ts","dependencies":[{"path":"/home/tamanna/htdocs/carconfiguratorfrontend/src/store/taxSettings/mutations.ts","mtime":1678204643798},{"path":"/home/tamanna/htdocs/carconfiguratorfrontend/node_modules/cache-loader/dist/cjs.js","mtime":1691610247617},{"path":"/home/tamanna/htdocs/carconfiguratorfrontend/node_modules/babel-loader/lib/index.js","mtime":1691610247572},{"path":"/home/tamanna/htdocs/carconfiguratorfrontend/node_modules/ts-loader/index.js","mtime":1691610259533},{"path":"/home/tamanna/htdocs/carconfiguratorfrontend/node_modules/eslint-loader/index.js","mtime":1691610259081}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9kZWZpbmVQcm9wZXJ0eSBmcm9tICIvaG9tZS90YW1hbm5hL2h0ZG9jcy9jYXJjb25maWd1cmF0b3Jmcm9udGVuZC9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vZGVmaW5lUHJvcGVydHkiOwoKdmFyIF9tdXRhdGlvbnM7CgpleHBvcnQgdmFyIE11dGF0aW9uVHlwZXM7CgooZnVuY3Rpb24gKE11dGF0aW9uVHlwZXMpIHsKICBNdXRhdGlvblR5cGVzWyJTRVRfTE9BREVSIl0gPSAiU0VUX0xPQURFUiI7CiAgTXV0YXRpb25UeXBlc1siU0VUX1RBWFNFVFRJTkdTIl0gPSAiU0VUX1RBWFNFVFRJTkdTIjsKICBNdXRhdGlvblR5cGVzWyJTRVRfQUREVEFYU0VUVElOR1NTVUNFU1MiXSA9ICJTRVRfQUREVEFYU0VUVElOR1NTVUNFU1MiOwogIE11dGF0aW9uVHlwZXNbIlNFVF9UQVhTRVRUSU5HU19FUlJPUiJdID0gIlNFVF9UQVhTRVRUSU5HRVJST1IiOwp9KShNdXRhdGlvblR5cGVzIHx8IChNdXRhdGlvblR5cGVzID0ge30pKTsKCmV4cG9ydCB2YXIgbXV0YXRpb25zID0gKF9tdXRhdGlvbnMgPSB7fSwgX2RlZmluZVByb3BlcnR5KF9tdXRhdGlvbnMsIE11dGF0aW9uVHlwZXMuU0VUX0xPQURFUiwgZnVuY3Rpb24gKHN0YXRlLCBwYXlsb2FkKSB7CiAgc3RhdGUubG9hZGVyID0gcGF5bG9hZDsKfSksIF9kZWZpbmVQcm9wZXJ0eShfbXV0YXRpb25zLCBNdXRhdGlvblR5cGVzLlNFVF9UQVhTRVRUSU5HUywgZnVuY3Rpb24gKHN0YXRlLCBwYXlsb2FkKSB7CiAgc3RhdGUuZ2V0VGF4U2V0dGluZ3NCeVllYXIgPSBwYXlsb2FkOwp9KSwgX2RlZmluZVByb3BlcnR5KF9tdXRhdGlvbnMsIE11dGF0aW9uVHlwZXMuU0VUX0FERFRBWFNFVFRJTkdTU1VDRVNTLCBmdW5jdGlvbiAoc3RhdGUsIHBheWxvYWQpIHsKICBzdGF0ZS5pc1RheFNldHRpbmdzQWRkZWQgPSBwYXlsb2FkOwp9KSwgX2RlZmluZVByb3BlcnR5KF9tdXRhdGlvbnMsIE11dGF0aW9uVHlwZXMuU0VUX1RBWFNFVFRJTkdTX0VSUk9SLCBmdW5jdGlvbiAoc3RhdGUsIHBheWxvYWQpIHsKICBzdGF0ZS50YXhTZXR0aW5nRXJyb3JzID0gcGF5bG9hZDsKfSksIF9tdXRhdGlvbnMpOw=="},{"version":3,"sources":["/home/tamanna/htdocs/carconfiguratorfrontend/node_modules/eslint-loader/index.js??ref--13-0!/home/tamanna/htdocs/carconfiguratorfrontend/src/store/taxSettings/mutations.ts"],"names":[],"mappings":";;;;AAIA,OAAA,IAAY,aAAZ;;AAAA,CAAA,UAAY,aAAZ,EAAyB;AACrB,EAAA,aAAA,CAAA,YAAA,CAAA,GAAA,YAAA;AACA,EAAA,aAAA,CAAA,iBAAA,CAAA,GAAA,iBAAA;AACA,EAAA,aAAA,CAAA,0BAAA,CAAA,GAAA,0BAAA;AACA,EAAA,aAAA,CAAA,uBAAA,CAAA,GAAA,qBAAA;AACH,CALD,EAAY,aAAa,KAAb,aAAa,GAAA,EAAA,CAAzB;;AAcA,OAAO,IAAM,SAAS,iDACjB,aAAa,CAAC,UADG,YACS,KADT,EACgB,OADhB,EACuB;AACrC,EAAA,KAAK,CAAC,MAAN,GAAe,OAAf;AACH,CAHiB,+BAIjB,aAAa,CAAC,eAJG,YAIc,KAJd,EAIqB,OAJrB,EAI4B;AAC1C,EAAA,KAAK,CAAC,oBAAN,GAA6B,OAA7B;AACH,CANiB,+BAOjB,aAAa,CAAC,wBAPG,YAOuB,KAPvB,EAO8B,OAP9B,EAOqC;AACnD,EAAA,KAAK,CAAC,kBAAN,GAA2B,OAA3B;AACH,CATiB,+BAUjB,aAAa,CAAC,qBAVG,YAUoB,KAVpB,EAU2B,OAV3B,EAUkC;AAChD,EAAA,KAAK,CAAC,gBAAN,GAAyB,OAAzB;AACH,CAZiB,cAAf","sourcesContent":["import { MutationTree } from 'vuex'\nimport { State } from './index'\nimport { taxSettingsAddRequest } from '@/types'\n\nexport enum MutationTypes {\n    SET_LOADER = 'SET_LOADER',\n    SET_TAXSETTINGS = 'SET_TAXSETTINGS',\n    SET_ADDTAXSETTINGSSUCESS = 'SET_ADDTAXSETTINGSSUCESS',\n    SET_TAXSETTINGS_ERROR = 'SET_TAXSETTINGERROR'\n}\n\nexport type Mutations<S = State> = {\n    [MutationTypes.SET_LOADER](state: S, payload: boolean): void;\n    [MutationTypes.SET_TAXSETTINGS](state: S, payload: taxSettingsAddRequest): void;\n    [MutationTypes.SET_ADDTAXSETTINGSSUCESS](state: S, payload: boolean): void;\n    [MutationTypes.SET_TAXSETTINGS_ERROR](state: S, payload: string | Array<string>): void;\n}\n\nexport const mutations: MutationTree<State> & Mutations = {\n    [MutationTypes.SET_LOADER](state, payload) {\n        state.loader = payload\n    },\n    [MutationTypes.SET_TAXSETTINGS](state, payload) {\n        state.getTaxSettingsByYear = payload\n    },\n    [MutationTypes.SET_ADDTAXSETTINGSSUCESS](state, payload) {\n        state.isTaxSettingsAdded = payload\n    },\n    [MutationTypes.SET_TAXSETTINGS_ERROR](state, payload) {\n        state.taxSettingErrors = payload\n    }\n}\n"],"sourceRoot":""}]}