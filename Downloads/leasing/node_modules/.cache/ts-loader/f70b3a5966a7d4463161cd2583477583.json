{"remainingRequest":"/home/tamanna/htdocs/carconfiguratorfrontend/node_modules/babel-loader/lib/index.js!/home/tamanna/htdocs/carconfiguratorfrontend/node_modules/ts-loader/index.js??ref--14-2!/home/tamanna/htdocs/carconfiguratorfrontend/node_modules/eslint-loader/index.js??ref--13-0!/home/tamanna/htdocs/carconfiguratorfrontend/src/store/leaseCategories/index.ts","dependencies":[{"path":"/home/tamanna/htdocs/carconfiguratorfrontend/src/store/leaseCategories/index.ts","mtime":1678204643798},{"path":"/home/tamanna/htdocs/carconfiguratorfrontend/node_modules/cache-loader/dist/cjs.js","mtime":1691610247617},{"path":"/home/tamanna/htdocs/carconfiguratorfrontend/node_modules/babel-loader/lib/index.js","mtime":1691610247572},{"path":"/home/tamanna/htdocs/carconfiguratorfrontend/node_modules/ts-loader/index.js","mtime":1691610259533},{"path":"/home/tamanna/htdocs/carconfiguratorfrontend/node_modules/eslint-loader/index.js","mtime":1691610259081}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IHsgZ2V0dGVycyB9IGZyb20gJy4vZ2V0dGVycyc7CmltcG9ydCB7IG11dGF0aW9ucyB9IGZyb20gJy4vbXV0YXRpb25zJzsKaW1wb3J0IHsgYWN0aW9ucywgbGVhc2VBY3Rpb25UeXBlcyB9IGZyb20gJy4vYWN0aW9ucyc7CnZhciBzdGF0ZSA9IHsKICBsb2FkZXI6IGZhbHNlLAogIGFsbExlYXNlQ2F0ZWdvcmllczogW10sCiAgbGVhc2VDYXRlZ29yeUJ5SUQ6IHt9LAogIHVwZGF0ZUxlYXNlQ2F0ZWdvcnlSZXNwb25zZTogW10KfTsKdmFyIHVzZXIgPSB7CiAgc3RhdGU6IHN0YXRlLAogIG11dGF0aW9uczogbXV0YXRpb25zLAogIGFjdGlvbnM6IGFjdGlvbnMsCiAgZ2V0dGVyczogZ2V0dGVycwp9OwpleHBvcnQgeyBsZWFzZUFjdGlvblR5cGVzIH07CmV4cG9ydCBkZWZhdWx0IHVzZXI7"},{"version":3,"sources":["/home/tamanna/htdocs/carconfiguratorfrontend/node_modules/eslint-loader/index.js??ref--13-0!/home/tamanna/htdocs/carconfiguratorfrontend/src/store/leaseCategories/index.ts"],"names":[],"mappings":"AAAA,SAAS,OAAT,QAAiC,WAAjC;AACA,SAAS,SAAT,QAAqC,aAArC;AACA,SAAS,OAAT,EAA2B,gBAA3B,QAAmD,WAAnD;AAYA,IAAM,KAAK,GAAU;AACnB,EAAA,MAAM,EAAE,KADW;AAEnB,EAAA,kBAAkB,EAAE,EAFD;AAGnB,EAAA,iBAAiB,EAAE,EAHA;AAInB,EAAA,2BAA2B,EAAE;AAJV,CAArB;AAOA,IAAM,IAAI,GAA6B;AACrC,EAAA,KAAK,EAAL,KADqC;AAErC,EAAA,SAAS,EAAT,SAFqC;AAGrC,EAAA,OAAO,EAAP,OAHqC;AAIrC,EAAA,OAAO,EAAP;AAJqC,CAAvC;AAOA,SAAgB,gBAAhB;AACA,eAAe,IAAf","sourcesContent":["import { getters, Getters } from './getters'\nimport { mutations, Mutations } from './mutations'\nimport { actions, Actions, leaseActionTypes } from './actions'\nimport { Store as VuexStore, Module, CommitOptions, DispatchOptions } from 'vuex'\nimport type { State as RootState } from '@/store'\nimport { leaseCategoryResponseType } from '@/types'\n\ninterface State {\n  loader: boolean;\n  allLeaseCategories: leaseCategoryResponseType[];\n  leaseCategoryByID: leaseCategoryResponseType;\n  updateLeaseCategoryResponse: Array<string>;\n}\n\nconst state: State = {\n  loader: false,\n  allLeaseCategories: [],\n  leaseCategoryByID: {} as leaseCategoryResponseType,\n  updateLeaseCategoryResponse: []\n}\n\nconst user: Module<State, RootState> = {\n  state,\n  mutations,\n  actions,\n  getters\n}\n\nexport { State, leaseActionTypes, Store }\nexport default user\n\ntype Store<S = State> = Omit<VuexStore<S>, 'commit' | 'getters' | 'dispatch'> & {\n  commit<K extends keyof Mutations, P extends Parameters<Mutations[K]>[1]>(\n    key: K,\n    payload: P,\n    options?: CommitOptions\n  ): ReturnType<Mutations[K]>;\n} & {\n  getters: {\n    [K in keyof Getters]: ReturnType<Getters[K]>\n  };\n} & {\n  dispatch<K extends keyof Actions>(\n    key: K,\n    payload: Parameters<Actions[K]>[1],\n    options?: DispatchOptions\n  ): ReturnType<Actions[K]>;\n}\n"],"sourceRoot":""}]}