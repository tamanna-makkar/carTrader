{"remainingRequest":"/home/tamanna/htdocs/carconfiguratorfrontend/node_modules/babel-loader/lib/index.js!/home/tamanna/htdocs/carconfiguratorfrontend/node_modules/ts-loader/index.js??ref--14-2!/home/tamanna/htdocs/carconfiguratorfrontend/node_modules/eslint-loader/index.js??ref--13-0!/home/tamanna/htdocs/carconfiguratorfrontend/src/store/taxSettings/actions.ts","dependencies":[{"path":"/home/tamanna/htdocs/carconfiguratorfrontend/src/store/taxSettings/actions.ts","mtime":1678204643798},{"path":"/home/tamanna/htdocs/carconfiguratorfrontend/node_modules/cache-loader/dist/cjs.js","mtime":1691610247617},{"path":"/home/tamanna/htdocs/carconfiguratorfrontend/node_modules/babel-loader/lib/index.js","mtime":1691610247572},{"path":"/home/tamanna/htdocs/carconfiguratorfrontend/node_modules/ts-loader/index.js","mtime":1691610259533},{"path":"/home/tamanna/htdocs/carconfiguratorfrontend/node_modules/eslint-loader/index.js","mtime":1691610259081}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZm9yLWVhY2guanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5vYmplY3Qua2V5cy5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL3dlYi5kb20tY29sbGVjdGlvbnMuZm9yLWVhY2guanMiOwppbXBvcnQgX2RlZmluZVByb3BlcnR5IGZyb20gIi9ob21lL3RhbWFubmEvaHRkb2NzL2NhcmNvbmZpZ3VyYXRvcmZyb250ZW5kL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9kZWZpbmVQcm9wZXJ0eSI7CmltcG9ydCAicmVnZW5lcmF0b3ItcnVudGltZS9ydW50aW1lLmpzIjsKaW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIi9ob21lL3RhbWFubmEvaHRkb2NzL2NhcmNvbmZpZ3VyYXRvcmZyb250ZW5kL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9hc3luY1RvR2VuZXJhdG9yIjsKCnZhciBfYWN0aW9uczsKCmltcG9ydCB7IE11dGF0aW9uVHlwZXMgfSBmcm9tICcuL211dGF0aW9ucyc7CmltcG9ydCBhdXRoQXBpIGZyb20gJ0AvYXBpL0F1dGgnOwpleHBvcnQgdmFyIHRheFNldHRpbmdzQWN0aW9uVHlwZXM7CgooZnVuY3Rpb24gKHRheFNldHRpbmdzQWN0aW9uVHlwZXMpIHsKICB0YXhTZXR0aW5nc0FjdGlvblR5cGVzWyJQT1NUX1RBWFNFVFRJTkdTIl0gPSAiUE9TVF9UQVhTRVRUSU5HUyI7CiAgdGF4U2V0dGluZ3NBY3Rpb25UeXBlc1siR0VUX1RBWFNFVFRJTkdTIl0gPSAiR0VUX1RBWFNFVFRJTkdTIjsKICB0YXhTZXR0aW5nc0FjdGlvblR5cGVzWyJERUxFVEVfVEFYU0VUVElOR1MiXSA9ICJERUxFVEVfVEFYU0VUVElOR1MiOwp9KSh0YXhTZXR0aW5nc0FjdGlvblR5cGVzIHx8ICh0YXhTZXR0aW5nc0FjdGlvblR5cGVzID0ge30pKTsKCmV4cG9ydCB2YXIgYWN0aW9ucyA9IChfYWN0aW9ucyA9IHt9LCBfZGVmaW5lUHJvcGVydHkoX2FjdGlvbnMsIHRheFNldHRpbmdzQWN0aW9uVHlwZXMuUE9TVF9UQVhTRVRUSU5HUywgZnVuY3Rpb24gKF9yZWYsIGRhdGEpIHsKICByZXR1cm4gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlKCkgewogICAgdmFyIGNvbW1pdCwgcmVzLCBlcnJvckFycjsKICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlJChfY29udGV4dCkgewogICAgICB3aGlsZSAoMSkgewogICAgICAgIHN3aXRjaCAoX2NvbnRleHQucHJldiA9IF9jb250ZXh0Lm5leHQpIHsKICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgY29tbWl0ID0gX3JlZi5jb21taXQ7CiAgICAgICAgICAgIGNvbW1pdChNdXRhdGlvblR5cGVzLlNFVF9MT0FERVIsIHRydWUpOwogICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gNDsKICAgICAgICAgICAgcmV0dXJuIGF1dGhBcGkudGF4U2V0dGluZ3NBZGQoZGF0YSk7CgogICAgICAgICAgY2FzZSA0OgogICAgICAgICAgICByZXMgPSBfY29udGV4dC5zZW50OwoKICAgICAgICAgICAgaWYgKHJlcy5zdGF0dXMgIT0gJ3N1Y2Nlc3MnKSB7CiAgICAgICAgICAgICAgaWYgKHR5cGVvZiByZXMudGF4U2V0dGluZ3NSZXNwb25zZSAhPT0gJ3N0cmluZycpIHsKICAgICAgICAgICAgICAgIGVycm9yQXJyID0gW107CiAgICAgICAgICAgICAgICBPYmplY3Qua2V5cyhyZXMudGF4U2V0dGluZ3NSZXNwb25zZSkuZm9yRWFjaChmdW5jdGlvbiAoa2V5KSB7CiAgICAgICAgICAgICAgICAgIGlmIChyZXMudGF4U2V0dGluZ3NSZXNwb25zZVtrZXldLmxlbmd0aCA+IDApIHsKICAgICAgICAgICAgICAgICAgICBlcnJvckFyci5wdXNoKHJlcy50YXhTZXR0aW5nc1Jlc3BvbnNlW2tleV1bMF0pOwogICAgICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgICAgICBjb21taXQoTXV0YXRpb25UeXBlcy5TRVRfVEFYU0VUVElOR1NfRVJST1IsIGVycm9yQXJyKTsKICAgICAgICAgICAgICAgIH0pOwogICAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgICBjb21taXQoTXV0YXRpb25UeXBlcy5TRVRfVEFYU0VUVElOR1NfRVJST1IsIHJlcy50YXhTZXR0aW5nc1Jlc3BvbnNlKTsKICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0gZWxzZSBpZiAocmVzLnRheFNldHRpbmdzUmVzcG9uc2VbJ2JwbVRheFNldHRpbmdzJ11bMF1bJ21lc3NhZ2UnXSA9PSAnU2V0dGluZ3MgQlBNIGFkZGVkJyAmJiByZXMudGF4U2V0dGluZ3NSZXNwb25zZVsnZGllc2VsU3VydGF4U2V0dGluZ3MnXVswXVsnbWVzc2FnZSddID09ICdTZXR0aW5ncyBEaWVzZWwgU3VydGF4IGFkZGVkJyAmJiByZXMudGF4U2V0dGluZ3NSZXNwb25zZVsnZmlzY2FsVGF4U2V0dGluZ3MnXVswXVsnbWVzc2FnZSddID09ICdTZXR0aW5ncyBGaXNjYWwgVGF4IGFkZGVkJyAmJiByZXMudGF4U2V0dGluZ3NSZXNwb25zZVsnaW5jb21lVGF4U2V0dGluZ3MnXVswXVsnbWVzc2FnZSddID09ICdTZXR0aW5ncyBJbmNvbWUgVGF4IGFkZGVkJykgewogICAgICAgICAgICAgIGNvbW1pdChNdXRhdGlvblR5cGVzLlNFVF9BRERUQVhTRVRUSU5HU1NVQ0VTUywgdHJ1ZSk7CiAgICAgICAgICAgIH0KCiAgICAgICAgICAgIGNvbW1pdChNdXRhdGlvblR5cGVzLlNFVF9MT0FERVIsIGZhbHNlKTsKCiAgICAgICAgICBjYXNlIDc6CiAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuc3RvcCgpOwogICAgICAgIH0KICAgICAgfQogICAgfSwgX2NhbGxlZSk7CiAgfSkpKCk7Cn0pLCBfZGVmaW5lUHJvcGVydHkoX2FjdGlvbnMsIHRheFNldHRpbmdzQWN0aW9uVHlwZXMuR0VUX1RBWFNFVFRJTkdTLCBmdW5jdGlvbiAoX3JlZjIsIGRhdGEpIHsKICByZXR1cm4gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlMigpIHsKICAgIHZhciBjb21taXQsIHJlczsKICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlMiQoX2NvbnRleHQyKSB7CiAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgc3dpdGNoIChfY29udGV4dDIucHJldiA9IF9jb250ZXh0Mi5uZXh0KSB7CiAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgIGNvbW1pdCA9IF9yZWYyLmNvbW1pdDsKICAgICAgICAgICAgY29tbWl0KE11dGF0aW9uVHlwZXMuU0VUX0xPQURFUiwgdHJ1ZSk7CiAgICAgICAgICAgIF9jb250ZXh0Mi5uZXh0ID0gNDsKICAgICAgICAgICAgcmV0dXJuIGF1dGhBcGkuZ2V0VGF4U2V0dGluZ3NCeVllYXIoZGF0YS55ZWFyKTsKCiAgICAgICAgICBjYXNlIDQ6CiAgICAgICAgICAgIHJlcyA9IF9jb250ZXh0Mi5zZW50OwogICAgICAgICAgICBjb21taXQoTXV0YXRpb25UeXBlcy5TRVRfVEFYU0VUVElOR1MsIHJlcyk7CiAgICAgICAgICAgIGNvbW1pdChNdXRhdGlvblR5cGVzLlNFVF9MT0FERVIsIGZhbHNlKTsKCiAgICAgICAgICBjYXNlIDc6CiAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICByZXR1cm4gX2NvbnRleHQyLnN0b3AoKTsKICAgICAgICB9CiAgICAgIH0KICAgIH0sIF9jYWxsZWUyKTsKICB9KSkoKTsKfSksIF9kZWZpbmVQcm9wZXJ0eShfYWN0aW9ucywgdGF4U2V0dGluZ3NBY3Rpb25UeXBlcy5ERUxFVEVfVEFYU0VUVElOR1MsIGZ1bmN0aW9uIChfcmVmMywgZGF0YSkgewogIHJldHVybiBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUzKCkgewogICAgdmFyIGNvbW1pdDsKICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlMyQoX2NvbnRleHQzKSB7CiAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgc3dpdGNoIChfY29udGV4dDMucHJldiA9IF9jb250ZXh0My5uZXh0KSB7CiAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgIGNvbW1pdCA9IF9yZWYzLmNvbW1pdDsKICAgICAgICAgICAgY29tbWl0KE11dGF0aW9uVHlwZXMuU0VUX0xPQURFUiwgdHJ1ZSk7CiAgICAgICAgICAgIF9jb250ZXh0My5uZXh0ID0gNDsKICAgICAgICAgICAgcmV0dXJuIGF1dGhBcGkudGF4U2V0dGluZ3NEZWxldGUoZGF0YS55ZWFyKTsKCiAgICAgICAgICBjYXNlIDQ6CiAgICAgICAgICAgIGNvbW1pdChNdXRhdGlvblR5cGVzLlNFVF9MT0FERVIsIGZhbHNlKTsKCiAgICAgICAgICBjYXNlIDU6CiAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICByZXR1cm4gX2NvbnRleHQzLnN0b3AoKTsKICAgICAgICB9CiAgICAgIH0KICAgIH0sIF9jYWxsZWUzKTsKICB9KSkoKTsKfSksIF9hY3Rpb25zKTs="},{"version":3,"sources":["/home/tamanna/htdocs/carconfiguratorfrontend/node_modules/eslint-loader/index.js??ref--13-0!/home/tamanna/htdocs/carconfiguratorfrontend/src/store/taxSettings/actions.ts"],"names":[],"mappings":"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","sourcesContent":["import { ActionContext, ActionTree } from 'vuex'\nimport { Mutations, MutationTypes } from './mutations'\nimport { State } from './index'\nimport type { State as RootState } from '@/store'\nimport authApi from '@/api/Auth'\nimport { taxSettingsAddRequest } from '@/types'\n\nexport enum taxSettingsActionTypes {\n    'POST_TAXSETTINGS' = 'POST_TAXSETTINGS',\n    'GET_TAXSETTINGS' = 'GET_TAXSETTINGS',\n    'DELETE_TAXSETTINGS' = 'DELETE_TAXSETTINGS'\n}\n\ntype AugmentedActionContext = {\n    commit<K extends keyof Mutations>(key: K, payload: Parameters<Mutations[K]>[1]): ReturnType<Mutations[K]>;\n} & Omit<ActionContext<State, RootState>, 'commit'>\n\nexport interface Actions {\n    [taxSettingsActionTypes.POST_TAXSETTINGS]({ commit }: AugmentedActionContext, payload: taxSettingsAddRequest): void;\n    [taxSettingsActionTypes.GET_TAXSETTINGS]({ commit }: AugmentedActionContext, payload: { year: number }): void;\n    [taxSettingsActionTypes.DELETE_TAXSETTINGS]({ commit }: AugmentedActionContext, payload: { year: number }): void;\n}\n\nexport const actions: ActionTree<State, RootState> & Actions = {\n    async [taxSettingsActionTypes.POST_TAXSETTINGS]({ commit }, data) {\n        commit(MutationTypes.SET_LOADER, true)\n        const res = await authApi.taxSettingsAdd(data)\n        if (res.status != 'success') {\n            if (typeof res.taxSettingsResponse !== 'string') {\n                const errorArr = []\n                Object.keys(res.taxSettingsResponse).forEach(key => {\n                    if (res.taxSettingsResponse[key].length > 0) {\n                        errorArr.push(res.taxSettingsResponse[key][0])\n                    }\n                    commit(MutationTypes.SET_TAXSETTINGS_ERROR, errorArr)\n                })\n            } else {\n                commit(MutationTypes.SET_TAXSETTINGS_ERROR, res.taxSettingsResponse)\n            }\n        } else if (res.taxSettingsResponse['bpmTaxSettings'][0]['message'] == 'Settings BPM added' && res.taxSettingsResponse['dieselSurtaxSettings'][0]['message'] == 'Settings Diesel Surtax added' && res.taxSettingsResponse['fiscalTaxSettings'][0]['message'] == 'Settings Fiscal Tax added' && res.taxSettingsResponse['incomeTaxSettings'][0]['message'] == 'Settings Income Tax added') {\n            commit(MutationTypes.SET_ADDTAXSETTINGSSUCESS, true)\n        }\n        commit(MutationTypes.SET_LOADER, false)\n    },\n    async [taxSettingsActionTypes.GET_TAXSETTINGS]({ commit }, data) {\n        commit(MutationTypes.SET_LOADER, true)\n        const res = await authApi.getTaxSettingsByYear(data.year)\n        commit(MutationTypes.SET_TAXSETTINGS, res)\n        commit(MutationTypes.SET_LOADER, false)\n    },\n    async [taxSettingsActionTypes.DELETE_TAXSETTINGS]({ commit }, data) {\n        commit(MutationTypes.SET_LOADER, true)\n        await authApi.taxSettingsDelete(data.year)\n        commit(MutationTypes.SET_LOADER, false)\n    }\n}"],"sourceRoot":""}]}