{"remainingRequest":"/home/tamanna/htdocs/carconfiguratorfrontend/node_modules/babel-loader/lib/index.js!/home/tamanna/htdocs/carconfiguratorfrontend/node_modules/ts-loader/index.js??ref--14-2!/home/tamanna/htdocs/carconfiguratorfrontend/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/tamanna/htdocs/carconfiguratorfrontend/node_modules/vue-loader-v16/dist/index.js??ref--0-1!/home/tamanna/htdocs/carconfiguratorfrontend/src/views/CompareCars.vue?vue&type=script&lang=ts","dependencies":[{"path":"/home/tamanna/htdocs/carconfiguratorfrontend/src/views/CompareCars.vue","mtime":1679984631785},{"path":"/home/tamanna/htdocs/carconfiguratorfrontend/node_modules/cache-loader/dist/cjs.js","mtime":1691610247617},{"path":"/home/tamanna/htdocs/carconfiguratorfrontend/node_modules/babel-loader/lib/index.js","mtime":1691610247572},{"path":"/home/tamanna/htdocs/carconfiguratorfrontend/node_modules/ts-loader/index.js","mtime":1691610259533},{"path":"/home/tamanna/htdocs/carconfiguratorfrontend/node_modules/cache-loader/dist/cjs.js","mtime":1691610247617},{"path":"/home/tamanna/htdocs/carconfiguratorfrontend/node_modules/vue-loader-v16/dist/index.js","mtime":1691610261934}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuY29uY2F0LmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmluZC1pbmRleC5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LmZsYXQuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5mb3ItZWFjaC5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5Lm1hcC5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LnNvbWUuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5zcGxpY2UuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS51bnNjb3BhYmxlcy5mbGF0LmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZy5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnJlZ2V4cC5leGVjLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMucmVnZXhwLnRvLXN0cmluZy5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnN0cmluZy5yZXBsYWNlLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvd2ViLmRvbS1jb2xsZWN0aW9ucy5mb3ItZWFjaC5qcyI7CmltcG9ydCBfdG9Db25zdW1hYmxlQXJyYXkgZnJvbSAiL2hvbWUvdGFtYW5uYS9odGRvY3MvY2FyY29uZmlndXJhdG9yZnJvbnRlbmQvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL3RvQ29uc3VtYWJsZUFycmF5IjsKaW1wb3J0ICJyZWdlbmVyYXRvci1ydW50aW1lL3J1bnRpbWUuanMiOwppbXBvcnQgX2FzeW5jVG9HZW5lcmF0b3IgZnJvbSAiL2hvbWUvdGFtYW5uYS9odGRvY3MvY2FyY29uZmlndXJhdG9yZnJvbnRlbmQvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2FzeW5jVG9HZW5lcmF0b3IiOwppbXBvcnQgeyBkZWZpbmVDb21wb25lbnQsIHJlZiwgb25Nb3VudGVkLCBjb21wdXRlZCwgd2F0Y2ggfSBmcm9tICd2dWUnOwppbXBvcnQgZm9ybWF0Q3VycmVuY3kgZnJvbSAnQC9maWx0ZXJzL0N1cnJlbmN5Rm9ybWF0JzsKaW1wb3J0IEJ1dHRvbiBmcm9tICdAL2NvbXBvbmVudHMvVUkvQnV0dG9uLnZ1ZSc7CmltcG9ydCB7IEFjdGlvblR5cGVzIGFzIHVzZXJDYXJzQWN0aW9uVHlwZXMgfSBmcm9tICdAL3N0b3JlL3VzZXJDYXJzL2FjdGlvbnMnOwppbXBvcnQgeyB1c2VSb3V0ZSB9IGZyb20gJ3Z1ZS1yb3V0ZXInOwppbXBvcnQgeyB1c2VTdG9yZSB9IGZyb20gJ0Avc3RvcmUnOwppbXBvcnQgTG9hZGVyIGZyb20gJ0AvY29tcG9uZW50cy9VSS9Mb2FkZXIudnVlJzsKaW1wb3J0IFBvcHVwIGZyb20gJ0AvY29tcG9uZW50cy9Qb3B1cC52dWUnOwppbXBvcnQgcm91dGVyIGZyb20gJ0Avcm91dGVyJzsKaW1wb3J0IGdldFRyYW5zbGF0ZWRCb2R5VHlwZSBmcm9tICdAL2ZpbHRlcnMvZ2V0VHJhbnNsYXRlZEJvZHlUeXBlJzsKaW1wb3J0IGdldFRyYW5zbGF0ZWRGdWVsVHlwZSBmcm9tICdAL2ZpbHRlcnMvZ2V0VHJhbnNsYXRlZEZ1ZWxUeXBlJzsKaW1wb3J0IHsgVVNFUl9TVEFUVVMgfSBmcm9tICdAL2NvbXBvc2FibGVzL3N0YXRpY1ZhbHVlcyc7CmltcG9ydCB0b0xvd2VyQ2FzZSBmcm9tICdAL2ZpbHRlcnMvdG9Mb3dlckNhc2UnOwpleHBvcnQgZGVmYXVsdCBkZWZpbmVDb21wb25lbnQoewogIG5hbWU6ICdIb21lJywKICBzZXR1cDogZnVuY3Rpb24gc2V0dXAoKSB7CiAgICB2YXIgb3BlbiA9IHJlZigpOwogICAgdmFyIHJvdXRlID0gdXNlUm91dGUoKTsKICAgIHZhciBzdG9yZSA9IHVzZVN0b3JlKCk7CiAgICB2YXIgc2hvd1BvcHVwID0gcmVmKGZhbHNlKTsKICAgIHZhciBkZWxldGVDYXJJZCA9IHJlZigwKTsKICAgIHZhciBpbWFnZXNVUmwgPSBwcm9jZXNzLmVudi5WVUVfQVBQX0lNR19VUkw7CiAgICB2YXIgbG9hZGVyID0gY29tcHV0ZWQoZnVuY3Rpb24gKCkgewogICAgICByZXR1cm4gc3RvcmUuc3RhdGUudXNlckNhcnMubG9hZGVyOwogICAgfSk7CiAgICB2YXIgY2FyT3JkZXJlZFRydWUgPSBjb21wdXRlZChmdW5jdGlvbiAoKSB7CiAgICAgIHJldHVybiB0b0xvd2VyQ2FzZShzdG9yZS5zdGF0ZS5hdXRoLmN1cnJlbnRVc2VyLnVzZXJTdGF0dXMpID09PSBVU0VSX1NUQVRVUy5DQVJfT1JERVJFRDsKICAgIH0pOwogICAgdmFyIGNvbXBhcmVDYXJzRGF0YSA9IGNvbXB1dGVkKGZ1bmN0aW9uICgpIHsKICAgICAgcmV0dXJuIHN0b3JlLnN0YXRlLnVzZXJDYXJzLmNvbXBhcmVDYXJzRGF0YTsKICAgIH0pOwogICAgdmFyIGNvbXBhcmVDYXJzU3RhdHVzID0gY29tcHV0ZWQoZnVuY3Rpb24gKCkgewogICAgICByZXR1cm4gc3RvcmUuc3RhdGUudXNlckNhcnMuY29tcGFyZUNhcnNTdGF0dXM7CiAgICB9KTsKCiAgICB2YXIgaW5pdGlhbGl6ZSA9IC8qI19fUFVSRV9fKi9mdW5jdGlvbiAoKSB7CiAgICAgIHZhciBfcmVmID0gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlKCkgewogICAgICAgIHZhciBjb21wSWRzOwogICAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlJChfY29udGV4dCkgewogICAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgICAgc3dpdGNoIChfY29udGV4dC5wcmV2ID0gX2NvbnRleHQubmV4dCkgewogICAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICAgIGlmICghcm91dGUucXVlcnkuaWQpIHsKICAgICAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDQ7CiAgICAgICAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICAgIGNvbXBJZHMgPSBBcnJheS5pc0FycmF5KHJvdXRlLnF1ZXJ5LmlkKSA/IHJvdXRlLnF1ZXJ5LmlkIDogW3JvdXRlLnF1ZXJ5LmlkXTsKICAgICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSA0OwogICAgICAgICAgICAgICAgcmV0dXJuIHN0b3JlLmRpc3BhdGNoKHVzZXJDYXJzQWN0aW9uVHlwZXMuR0VUX0NBUl9PUkRFUl9ERVRBSUxTLCBjb21wSWRzKTsKCiAgICAgICAgICAgICAgY2FzZSA0OgogICAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuc3RvcCgpOwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfSwgX2NhbGxlZSk7CiAgICAgIH0pKTsKCiAgICAgIHJldHVybiBmdW5jdGlvbiBpbml0aWFsaXplKCkgewogICAgICAgIHJldHVybiBfcmVmLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7CiAgICAgIH07CiAgICB9KCk7CgogICAgb25Nb3VudGVkKGluaXRpYWxpemUpOwoKICAgIHZhciBvcHRpb25zT3BlbiA9IGZ1bmN0aW9uIG9wdGlvbnNPcGVuKGluZGV4KSB7CiAgICAgIGlmIChvcGVuLnZhbHVlID09PSBpbmRleCkgewogICAgICAgIG9wZW4udmFsdWUgPSBudWxsOwogICAgICB9IGVsc2UgewogICAgICAgIG9wZW4udmFsdWUgPSBpbmRleDsKICAgICAgfQogICAgfTsKCiAgICB2YXIgZHVwbGljYXRlQ2FyID0gLyojX19QVVJFX18qL2Z1bmN0aW9uICgpIHsKICAgICAgdmFyIF9yZWYyID0gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlMihpdGVtKSB7CiAgICAgICAgdmFyIGNhckJvZHksIHJlcywgaWQsIGNhcklkczsKICAgICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZTIkKF9jb250ZXh0MikgewogICAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgICAgc3dpdGNoIChfY29udGV4dDIucHJldiA9IF9jb250ZXh0Mi5uZXh0KSB7CiAgICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgICAgY2FyQm9keSA9IHsKICAgICAgICAgICAgICAgICAgdmVoaWNsZUlkOiBpdGVtLnZlaGljbGVEZXRhaWxzLnVuaXF1ZV9pZGVudGl0eV8xMDEsCiAgICAgICAgICAgICAgICAgIG1vbnRobHlDb3N0OiBpdGVtLm5ldE1vbnRobHlDb3N0LAogICAgICAgICAgICAgICAgICBjYXJQcmljZTogMTAwMCwKICAgICAgICAgICAgICAgICAgY28yRW1pc3Npb246IGl0ZW0uY28yRW1pc3Npb24sCiAgICAgICAgICAgICAgICAgIHN0YXR1czogZmFsc2UsCiAgICAgICAgICAgICAgICAgIGNvbG9yczogaXRlbS5pbnRlcmlvckNvbG9yLAogICAgICAgICAgICAgICAgICBvcHRpb25zOiBpdGVtLm9wdGlvbnMsCiAgICAgICAgICAgICAgICAgIG1hbmRhdG9yeUFjY2Vzc29yaWVzOiBpdGVtLm1hbmRhdG9yeUFjY2Vzc29yaWVzLAogICAgICAgICAgICAgICAgICBvdGhlckFjY2Vzc29yaWVzOiBpdGVtLm90aGVyQWNjZXNzb3JpZXMsCiAgICAgICAgICAgICAgICAgIGNoYXJnaW5nRmFjaWxpdGllczogaXRlbS5jaGFyZ2luZ0ZhY2lsaXRpZXMKICAgICAgICAgICAgICAgIH07CiAgICAgICAgICAgICAgICBfY29udGV4dDIubmV4dCA9IDM7CiAgICAgICAgICAgICAgICByZXR1cm4gc3RvcmUuZGlzcGF0Y2godXNlckNhcnNBY3Rpb25UeXBlcy5TQVZFX0NBUl9PUkRFUiwgY2FyQm9keSk7CgogICAgICAgICAgICAgIGNhc2UgMzoKICAgICAgICAgICAgICAgIHJlcyA9IF9jb250ZXh0Mi5zZW50OwogICAgICAgICAgICAgICAgaWQgPSByZXMuY2FyT3JkZXJSZXNwb25zZS5pZDsKCiAgICAgICAgICAgICAgICBpZiAocm91dGUucXVlcnkuaWQpIHsKICAgICAgICAgICAgICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIEB0eXBlc2NyaXB0LWVzbGludC9uby1leHBsaWNpdC1hbnkKICAgICAgICAgICAgICAgICAgY2FySWRzID0gQXJyYXkuaXNBcnJheShyb3V0ZS5xdWVyeS5pZCkgPyBfdG9Db25zdW1hYmxlQXJyYXkocm91dGUucXVlcnkuaWQpIDogW3JvdXRlLnF1ZXJ5LmlkXTsKICAgICAgICAgICAgICAgICAgY2FySWRzLnB1c2goaWQpOwogICAgICAgICAgICAgICAgICByb3V0ZXIucHVzaCh7CiAgICAgICAgICAgICAgICAgICAgbmFtZTogJ0NvbXBhcmVDYXJzJywKICAgICAgICAgICAgICAgICAgICBxdWVyeTogewogICAgICAgICAgICAgICAgICAgICAgaWQ6IGNhcklkcwogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgICAgICAgIG9wZW4udmFsdWUgPSBmYWxzZTsKICAgICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgY2FzZSA2OgogICAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQyLnN0b3AoKTsKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0sIF9jYWxsZWUyKTsKICAgICAgfSkpOwoKICAgICAgcmV0dXJuIGZ1bmN0aW9uIGR1cGxpY2F0ZUNhcihfeCkgewogICAgICAgIHJldHVybiBfcmVmMi5hcHBseSh0aGlzLCBhcmd1bWVudHMpOwogICAgICB9OwogICAgfSgpOwoKICAgIHZhciBjbG9zZVBvcHVwID0gZnVuY3Rpb24gY2xvc2VQb3B1cCgpIHsKICAgICAgc2hvd1BvcHVwLnZhbHVlID0gZmFsc2U7CiAgICB9OwoKICAgIHZhciBjb25maWd1cmVDYXIgPSAvKiNfX1BVUkVfXyovZnVuY3Rpb24gKCkgewogICAgICB2YXIgX3JlZjMgPSBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUzKHNhdmVkQ2FyKSB7CiAgICAgICAgdmFyIG9wdGlvbklkcywgdXNlclNlbGVjdGVkT3B0aW9ucywgbmVzdGVkT3B0aW9ucywgc2VsZWN0ZWRPcHRpb25zOwogICAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlMyQoX2NvbnRleHQzKSB7CiAgICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0My5wcmV2ID0gX2NvbnRleHQzLm5leHQpIHsKICAgICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgICAvLyBhbGxPcHRpb25JZCdzCiAgICAgICAgICAgICAgICBvcHRpb25JZHMgPSBzYXZlZENhci5vcHRpb25zLm1hcChmdW5jdGlvbiAoZSkgewogICAgICAgICAgICAgICAgICByZXR1cm4gW2VdLmNvbmNhdChfdG9Db25zdW1hYmxlQXJyYXkoZVsnY2hpbGRyZW4nXSkpOwogICAgICAgICAgICAgICAgfSkuZmxhdCgpLm1hcChmdW5jdGlvbiAoaXRlbSkgewogICAgICAgICAgICAgICAgICByZXR1cm4gaXRlbVsnb3B0aW9uSWQnXS50b1N0cmluZygpOwogICAgICAgICAgICAgICAgfSk7IC8vIHVzZXJTZWxlY3RlZE9wdGlvbnMKCiAgICAgICAgICAgICAgICB1c2VyU2VsZWN0ZWRPcHRpb25zID0gc2F2ZWRDYXIub3B0aW9ucy5tYXAoZnVuY3Rpb24gKGUpIHsKICAgICAgICAgICAgICAgICAgcmV0dXJuIGVbJ29wdGlvbklkJ10udG9TdHJpbmcoKTsKICAgICAgICAgICAgICAgIH0pOyAvLyBuZXN0ZWRPcHRpb25zCgogICAgICAgICAgICAgICAgbmVzdGVkT3B0aW9ucyA9IHt9OwogICAgICAgICAgICAgICAgc2F2ZWRDYXIub3B0aW9ucy5mb3JFYWNoKGZ1bmN0aW9uIChpdGVtKSB7CiAgICAgICAgICAgICAgICAgIGlmICghbmVzdGVkT3B0aW9uc1tpdGVtWydvcHRpb25JZCddXSkgewogICAgICAgICAgICAgICAgICAgIG5lc3RlZE9wdGlvbnNbaXRlbVsnb3B0aW9uSWQnXV0gPSBbXTsKICAgICAgICAgICAgICAgICAgICBpdGVtWydjaGlsZHJlbiddLmZvckVhY2goZnVuY3Rpb24gKGUpIHsKICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBuZXN0ZWRPcHRpb25zW2l0ZW1bJ29wdGlvbklkJ11dLnB1c2goZVsnb3B0aW9uSWQnXS50b1N0cmluZygpKTsKICAgICAgICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgICAgICBzdG9yZS5zdGF0ZS5vcHRpb25zLm5lc3RlZE9wdGlvbnMgPSBuZXN0ZWRPcHRpb25zOwogICAgICAgICAgICAgICAgc2Vzc2lvblN0b3JhZ2Uuc2V0SXRlbSgnbmVzdGVkT3B0aW9ucycsIEpTT04uc3RyaW5naWZ5KG5lc3RlZE9wdGlvbnMpKTsKICAgICAgICAgICAgICAgIHNlbGVjdGVkT3B0aW9ucyA9IHsKICAgICAgICAgICAgICAgICAgc2VsZWN0ZWRPcHRpb25zOiBvcHRpb25JZHMsCiAgICAgICAgICAgICAgICAgIHVzZXJTZWxlY3RlZE9wdGlvbnM6IHVzZXJTZWxlY3RlZE9wdGlvbnMsCiAgICAgICAgICAgICAgICAgIHJlcXVpcmVkQ2hvaWNlczogW10sCiAgICAgICAgICAgICAgICAgIG9wdGlvbjogJycsCiAgICAgICAgICAgICAgICAgIGFjdGlvbjogJ2FkZGVkJywKICAgICAgICAgICAgICAgICAgb3RoZXJBY2Nlc3Nvcmllczogc2F2ZWRDYXIub3RoZXJBY2Nlc3NvcmllcywKICAgICAgICAgICAgICAgICAgY2hhcmdpbmdGYWNpbGl0aWVzOiBzYXZlZENhci5jaGFyZ2luZ0ZhY2lsaXRpZXMKICAgICAgICAgICAgICAgIH07CiAgICAgICAgICAgICAgICBfY29udGV4dDMubmV4dCA9IDk7CiAgICAgICAgICAgICAgICByZXR1cm4gc2Vzc2lvblN0b3JhZ2Uuc2V0SXRlbSgnb3B0aW9uc0NvbmZpZ3VyYXRpb25EYXRhJywgSlNPTi5zdHJpbmdpZnkoc2VsZWN0ZWRPcHRpb25zKSk7CgogICAgICAgICAgICAgIGNhc2UgOToKICAgICAgICAgICAgICAgIF9jb250ZXh0My5uZXh0ID0gMTE7CiAgICAgICAgICAgICAgICByZXR1cm4gcm91dGVyLnB1c2goewogICAgICAgICAgICAgICAgICBuYW1lOiAnU3RlcDMnLAogICAgICAgICAgICAgICAgICBwYXJhbXM6IHsKICAgICAgICAgICAgICAgICAgICB2ZWhpY2xlSWQ6IHNhdmVkQ2FyLnZlaGljbGVEZXRhaWxzLnVuaXF1ZV9pZGVudGl0eV8xMDEsCiAgICAgICAgICAgICAgICAgICAgY2FyT3JkZXJJZDogc2F2ZWRDYXIuaWQKICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgfSk7CgogICAgICAgICAgICAgIGNhc2UgMTE6CiAgICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDMuc3RvcCgpOwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfSwgX2NhbGxlZTMpOwogICAgICB9KSk7CgogICAgICByZXR1cm4gZnVuY3Rpb24gY29uZmlndXJlQ2FyKF94MikgewogICAgICAgIHJldHVybiBfcmVmMy5hcHBseSh0aGlzLCBhcmd1bWVudHMpOwogICAgICB9OwogICAgfSgpOwoKICAgIHZhciBvblByb2NlZWQgPSAvKiNfX1BVUkVfXyovZnVuY3Rpb24gKCkgewogICAgICB2YXIgX3JlZjQgPSBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWU0KCkgewogICAgICAgIHZhciBjYXJJZHMsIGRlbGV0ZWRJbmRleDsKICAgICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZTQkKF9jb250ZXh0NCkgewogICAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgICAgc3dpdGNoIChfY29udGV4dDQucHJldiA9IF9jb250ZXh0NC5uZXh0KSB7CiAgICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgICAgc2hvd1BvcHVwLnZhbHVlID0gZmFsc2U7CiAgICAgICAgICAgICAgICBvcGVuLnZhbHVlID0gZmFsc2U7CgogICAgICAgICAgICAgICAgaWYgKCEocm91dGUucXVlcnkuaWQgJiYgcm91dGUucXVlcnkuaWQubGVuZ3RoID4gMCkpIHsKICAgICAgICAgICAgICAgICAgX2NvbnRleHQ0Lm5leHQgPSAyMDsKICAgICAgICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgICAgX2NvbnRleHQ0Lm5leHQgPSA1OwogICAgICAgICAgICAgICAgcmV0dXJuIF90b0NvbnN1bWFibGVBcnJheShyb3V0ZS5xdWVyeS5pZCk7CgogICAgICAgICAgICAgIGNhc2UgNToKICAgICAgICAgICAgICAgIGNhcklkcyA9IF9jb250ZXh0NC5zZW50OwogICAgICAgICAgICAgICAgX2NvbnRleHQ0Lm5leHQgPSA4OwogICAgICAgICAgICAgICAgcmV0dXJuIGNhcklkcy5maW5kSW5kZXgoZnVuY3Rpb24gKGUpIHsKICAgICAgICAgICAgICAgICAgcmV0dXJuICtlID09PSArZGVsZXRlQ2FySWQudmFsdWU7CiAgICAgICAgICAgICAgICB9KTsKCiAgICAgICAgICAgICAgY2FzZSA4OgogICAgICAgICAgICAgICAgZGVsZXRlZEluZGV4ID0gX2NvbnRleHQ0LnNlbnQ7CiAgICAgICAgICAgICAgICBfY29udGV4dDQubmV4dCA9IDExOwogICAgICAgICAgICAgICAgcmV0dXJuIGNhcklkcy5zcGxpY2UoZGVsZXRlZEluZGV4LCAxKTsKCiAgICAgICAgICAgICAgY2FzZSAxMToKICAgICAgICAgICAgICAgIF9jb250ZXh0NC5uZXh0ID0gMTM7CiAgICAgICAgICAgICAgICByZXR1cm4gc3RvcmUuZGlzcGF0Y2godXNlckNhcnNBY3Rpb25UeXBlcy5ERUxFVEVfU0FWRURfQ0FSLCBbZGVsZXRlQ2FySWQudmFsdWVdKTsKCiAgICAgICAgICAgICAgY2FzZSAxMzoKICAgICAgICAgICAgICAgIGlmICghKGNhcklkcy5sZW5ndGggPT09IDApKSB7CiAgICAgICAgICAgICAgICAgIF9jb250ZXh0NC5uZXh0ID0gMTg7CiAgICAgICAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICAgIF9jb250ZXh0NC5uZXh0ID0gMTY7CiAgICAgICAgICAgICAgICByZXR1cm4gcm91dGVyLnB1c2goewogICAgICAgICAgICAgICAgICBuYW1lOiAnRGFzaGJvYXJkJwogICAgICAgICAgICAgICAgfSk7CgogICAgICAgICAgICAgIGNhc2UgMTY6CiAgICAgICAgICAgICAgICBfY29udGV4dDQubmV4dCA9IDIwOwogICAgICAgICAgICAgICAgYnJlYWs7CgogICAgICAgICAgICAgIGNhc2UgMTg6CiAgICAgICAgICAgICAgICBfY29udGV4dDQubmV4dCA9IDIwOwogICAgICAgICAgICAgICAgcmV0dXJuIHJvdXRlci5yZXBsYWNlKHsKICAgICAgICAgICAgICAgICAgbmFtZTogJ0NvbXBhcmVDYXJzJywKICAgICAgICAgICAgICAgICAgcXVlcnk6IHsKICAgICAgICAgICAgICAgICAgICBpZDogY2FySWRzCiAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIH0pOwoKICAgICAgICAgICAgICBjYXNlIDIwOgogICAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQ0LnN0b3AoKTsKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0sIF9jYWxsZWU0KTsKICAgICAgfSkpOwoKICAgICAgcmV0dXJuIGZ1bmN0aW9uIG9uUHJvY2VlZCgpIHsKICAgICAgICByZXR1cm4gX3JlZjQuYXBwbHkodGhpcywgYXJndW1lbnRzKTsKICAgICAgfTsKICAgIH0oKTsKCiAgICB2YXIgY2hlY2tJZkV2ID0gZnVuY3Rpb24gY2hlY2tJZkV2KGNvbXBhcmlzaW9uQ2FycykgewogICAgICB2YXIgaXNFdiA9IGNvbXBhcmlzaW9uQ2Fycy5zb21lKGZ1bmN0aW9uIChjYXIpIHsKICAgICAgICB2YXIgY2FyVHlwZSA9IGNhci52ZWhpY2xlRGV0YWlsc1sndHlwZV80ODYwMiddIHx8IGNhci52ZWhpY2xlRGV0YWlsc1snZnVlbF90eXBlXzg3MDInXTsKICAgICAgICByZXR1cm4gY2FyVHlwZSA9PSAnZWxlY3RyaWMnIHx8IGNhclR5cGUgPT0gJ3BsdWdfaW5faHlicmlkJzsKICAgICAgfSk7CiAgICAgIHJldHVybiBpc0V2OwogICAgfTsKCiAgICB3YXRjaChmdW5jdGlvbiAoKSB7CiAgICAgIHJldHVybiByb3V0ZS5xdWVyeS5pZDsKICAgIH0sIGZ1bmN0aW9uICgpIHsKICAgICAgaW5pdGlhbGl6ZSgpOwogICAgfSk7CgogICAgdmFyIGRlbGV0ZUNhciA9IGZ1bmN0aW9uIGRlbGV0ZUNhcihpdGVtKSB7CiAgICAgIGRlbGV0ZUNhcklkLnZhbHVlID0gaXRlbS5pZDsKICAgICAgc2hvd1BvcHVwLnZhbHVlID0gdHJ1ZTsKICAgIH07CgogICAgcmV0dXJuIHsKICAgICAgZm9ybWF0Q3VycmVuY3k6IGZvcm1hdEN1cnJlbmN5LAogICAgICBvcGVuOiBvcGVuLAogICAgICBvcHRpb25zT3Blbjogb3B0aW9uc09wZW4sCiAgICAgIGR1cGxpY2F0ZUNhcjogZHVwbGljYXRlQ2FyLAogICAgICBkZWxldGVDYXI6IGRlbGV0ZUNhciwKICAgICAgY29tcGFyZUNhcnNEYXRhOiBjb21wYXJlQ2Fyc0RhdGEsCiAgICAgIGNvbXBhcmVDYXJzU3RhdHVzOiBjb21wYXJlQ2Fyc1N0YXR1cywKICAgICAgaW1hZ2VzVVJsOiBpbWFnZXNVUmwsCiAgICAgIGxvYWRlcjogbG9hZGVyLAogICAgICBzaG93UG9wdXA6IHNob3dQb3B1cCwKICAgICAgY2xvc2VQb3B1cDogY2xvc2VQb3B1cCwKICAgICAgb25Qcm9jZWVkOiBvblByb2NlZWQsCiAgICAgIGNvbmZpZ3VyZUNhcjogY29uZmlndXJlQ2FyLAogICAgICBnZXRUcmFuc2xhdGVkQm9keVR5cGU6IGdldFRyYW5zbGF0ZWRCb2R5VHlwZSwKICAgICAgZ2V0VHJhbnNsYXRlZEZ1ZWxUeXBlOiBnZXRUcmFuc2xhdGVkRnVlbFR5cGUsCiAgICAgIGNhck9yZGVyZWRUcnVlOiBjYXJPcmRlcmVkVHJ1ZSwKICAgICAgY2hlY2tJZkV2OiBjaGVja0lmRXYKICAgIH07CiAgfSwKICBjb21wb25lbnRzOiB7CiAgICBCdXR0b246IEJ1dHRvbiwKICAgIExvYWRlcjogTG9hZGVyLAogICAgUG9wdXA6IFBvcHVwCiAgfQp9KTs="},{"version":3,"sources":["/home/tamanna/htdocs/carconfiguratorfrontend/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/tamanna/htdocs/carconfiguratorfrontend/node_modules/vue-loader-v16/dist/index.js??ref--0-1!/home/tamanna/htdocs/carconfiguratorfrontend/src/views/CompareCars.vue?vue&type=script&lang=ts"],"names":[],"mappings":"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","sourcesContent":["\nimport { defineComponent, ref, onMounted, computed, ComputedRef, watch } from 'vue'\nimport formatCurrency from '@/filters/CurrencyFormat'\nimport Button from '@/components/UI/Button.vue'\nimport { ActionTypes as userCarsActionTypes } from '@/store/userCars/actions'\nimport { useRoute } from 'vue-router'\nimport { useStore } from '@/store'\nimport { savedCarsType } from '@/types'\nimport Loader from '@/components/UI/Loader.vue'\nimport Popup from '@/components/Popup.vue'\nimport router from '@/router'\nimport getTranslatedBodyType from '@/filters/getTranslatedBodyType'\nimport getTranslatedFuelType from '@/filters/getTranslatedFuelType'\nimport { USER_STATUS } from '@/composables/staticValues'\nimport toLowerCase from '@/filters/toLowerCase'\nexport default defineComponent({\n  name: 'Home',\n  setup() {\n    const open = ref()\n    const route = useRoute()\n    const store = useStore()\n    const showPopup = ref(false)\n    const deleteCarId = ref(0)\n    const imagesURl = process.env.VUE_APP_IMG_URL\n    const loader = computed(() => store.state.userCars.loader)\n    const carOrderedTrue = computed(\n      () => toLowerCase(store.state.auth.currentUser.userStatus) === USER_STATUS.CAR_ORDERED\n    )\n    const compareCarsData: ComputedRef<savedCarsType[]> = computed(() => store.state.userCars.compareCarsData)\n    const compareCarsStatus = computed(() => store.state.userCars.compareCarsStatus)\n    const initialize = async () => {\n      if (route.query.id) {\n        const compIds = Array.isArray(route.query.id) ? route.query.id : [route.query.id]\n        await store.dispatch(userCarsActionTypes.GET_CAR_ORDER_DETAILS, compIds)\n      }\n    }\n\n    onMounted(initialize)\n    const optionsOpen = (index) => {\n      if (open.value === index) {\n        open.value = null\n      } else {\n        open.value = index\n      }\n    }\n    const duplicateCar = async (item) => {\n      const carBody = {\n        vehicleId: item.vehicleDetails.unique_identity_101,\n        monthlyCost: item.netMonthlyCost,\n        carPrice: 1000,\n        co2Emission: item.co2Emission,\n        status: false,\n        colors: item.interiorColor,\n        options: item.options, // Needs to be changed in further steps\n        mandatoryAccessories: item.mandatoryAccessories,\n        otherAccessories: item.otherAccessories,\n        chargingFacilities: item.chargingFacilities\n      }\n      const res = await store.dispatch(userCarsActionTypes.SAVE_CAR_ORDER, carBody)\n      const id = res.carOrderResponse.id\n      if (route.query.id) {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        const carIds: any = Array.isArray(route.query.id) ? [...route.query.id] : [route.query.id]\n        carIds.push(id)\n        router.push({ name: 'CompareCars', query: { id: carIds } })\n        open.value = false\n      }\n    }\n\n    const closePopup = () => {\n      showPopup.value = false\n    }\n\n    const configureCar = async (savedCar) => {\n      // allOptionId's\n      const optionIds = savedCar.options\n        .map((e) => {\n          return [e, ...e['children']]\n        })\n        .flat()\n        .map((item) => item['optionId'].toString())\n      // userSelectedOptions\n      const userSelectedOptions = savedCar.options.map((e) => {\n        return e['optionId'].toString()\n      })\n      // nestedOptions\n      const nestedOptions = {}\n      savedCar.options.forEach((item) => {\n        if (!nestedOptions[item['optionId']]) {\n          nestedOptions[item['optionId']] = []\n          item['children'].forEach((e) => nestedOptions[item['optionId']].push(e['optionId'].toString()))\n        }\n      })\n      store.state.options.nestedOptions = nestedOptions\n      sessionStorage.setItem('nestedOptions', JSON.stringify(nestedOptions))\n      const selectedOptions = {\n        selectedOptions: optionIds,\n        userSelectedOptions: userSelectedOptions,\n        requiredChoices: [],\n        option: '',\n        action: 'added',\n        otherAccessories: savedCar.otherAccessories,\n        chargingFacilities: savedCar.chargingFacilities\n      }\n      await sessionStorage.setItem('optionsConfigurationData', JSON.stringify(selectedOptions))\n      await router.push({\n        name: 'Step3',\n        params: {\n          vehicleId: savedCar.vehicleDetails.unique_identity_101,\n          carOrderId: savedCar.id\n        }\n      })\n    }\n    const onProceed = async () => {\n      showPopup.value = false\n      open.value = false\n      if (route.query.id && route.query.id.length > 0) {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        const carIds: any = await [...route.query.id]\n        const deletedIndex = await carIds.findIndex((e) => +e === +deleteCarId.value)\n        await carIds.splice(deletedIndex, 1)\n        await store.dispatch(userCarsActionTypes.DELETE_SAVED_CAR, [deleteCarId.value])\n        if (carIds.length === 0) {\n          await router.push({ name: 'Dashboard' })\n        } else {\n          await router.replace({ name: 'CompareCars', query: { id: carIds } })\n        }\n      }\n    }\n    const checkIfEv = (comparisionCars) => {\n      const isEv = comparisionCars.some((car) => {\n        const carType = car.vehicleDetails['type_48602'] || car.vehicleDetails['fuel_type_8702']\n        return carType == 'electric' || carType == 'plug_in_hybrid'\n      })\n      return isEv\n    }\n    watch(\n      () => route.query.id,\n      () => {\n        initialize()\n      }\n    )\n    const deleteCar = (item: savedCarsType) => {\n      deleteCarId.value = item.id\n      showPopup.value = true\n    }\n    return {\n      formatCurrency,\n      open,\n      optionsOpen,\n      duplicateCar,\n      deleteCar,\n      compareCarsData,\n      compareCarsStatus,\n      imagesURl,\n      loader,\n      showPopup,\n      closePopup,\n      onProceed,\n      configureCar,\n      getTranslatedBodyType,\n      getTranslatedFuelType,\n      carOrderedTrue,\n      checkIfEv\n    }\n  },\n  components: {\n    Button,\n    Loader,\n    Popup\n  }\n})\n"],"sourceRoot":""}]}