{"remainingRequest":"/home/tamanna/htdocs/carconfiguratorfrontend/node_modules/babel-loader/lib/index.js!/home/tamanna/htdocs/carconfiguratorfrontend/node_modules/ts-loader/index.js??ref--14-2!/home/tamanna/htdocs/carconfiguratorfrontend/node_modules/eslint-loader/index.js??ref--13-0!/home/tamanna/htdocs/carconfiguratorfrontend/src/store/orders/actions.ts","dependencies":[{"path":"/home/tamanna/htdocs/carconfiguratorfrontend/src/store/orders/actions.ts","mtime":1691610165532},{"path":"/home/tamanna/htdocs/carconfiguratorfrontend/node_modules/cache-loader/dist/cjs.js","mtime":1691610247617},{"path":"/home/tamanna/htdocs/carconfiguratorfrontend/node_modules/babel-loader/lib/index.js","mtime":1691610247572},{"path":"/home/tamanna/htdocs/carconfiguratorfrontend/node_modules/ts-loader/index.js","mtime":1691610259533},{"path":"/home/tamanna/htdocs/carconfiguratorfrontend/node_modules/eslint-loader/index.js","mtime":1691610259081}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9kZWZpbmVQcm9wZXJ0eSBmcm9tICIvaG9tZS90YW1hbm5hL2h0ZG9jcy9jYXJjb25maWd1cmF0b3Jmcm9udGVuZC9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vZGVmaW5lUHJvcGVydHkiOwppbXBvcnQgInJlZ2VuZXJhdG9yLXJ1bnRpbWUvcnVudGltZS5qcyI7CmltcG9ydCBfYXN5bmNUb0dlbmVyYXRvciBmcm9tICIvaG9tZS90YW1hbm5hL2h0ZG9jcy9jYXJjb25maWd1cmF0b3Jmcm9udGVuZC9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vYXN5bmNUb0dlbmVyYXRvciI7CmltcG9ydCB7IE11dGF0aW9uVHlwZXMgfSBmcm9tICcuL211dGF0aW9ucyc7CmltcG9ydCBhdXRoQXBpIGZyb20gJ0AvYXBpL0F1dGgnOwpleHBvcnQgdmFyIG9yZGVyc0FjdGlvblR5cGVzOwoKKGZ1bmN0aW9uIChvcmRlcnNBY3Rpb25UeXBlcykgewogIG9yZGVyc0FjdGlvblR5cGVzWyJHRVRfQUxMT1JERVJTIl0gPSAiR0VUX0FMTE9SREVSUyI7Cn0pKG9yZGVyc0FjdGlvblR5cGVzIHx8IChvcmRlcnNBY3Rpb25UeXBlcyA9IHt9KSk7CgpleHBvcnQgdmFyIGFjdGlvbnMgPSBfZGVmaW5lUHJvcGVydHkoe30sIG9yZGVyc0FjdGlvblR5cGVzLkdFVF9BTExPUkRFUlMsIGZ1bmN0aW9uIChfcmVmLCBkYXRhKSB7CiAgcmV0dXJuIF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZSgpIHsKICAgIHZhciBjb21taXQsIHJlczsKICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlJChfY29udGV4dCkgewogICAgICB3aGlsZSAoMSkgewogICAgICAgIHN3aXRjaCAoX2NvbnRleHQucHJldiA9IF9jb250ZXh0Lm5leHQpIHsKICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgY29tbWl0ID0gX3JlZi5jb21taXQ7CiAgICAgICAgICAgIGNvbW1pdChNdXRhdGlvblR5cGVzLlNFVF9MT0FERVIsIHRydWUpOwogICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gNDsKICAgICAgICAgICAgcmV0dXJuIGF1dGhBcGkuZ2V0QWxsQ2FyT3JkZXJzKGRhdGEucXVlcnkpOwoKICAgICAgICAgIGNhc2UgNDoKICAgICAgICAgICAgcmVzID0gX2NvbnRleHQuc2VudDsKICAgICAgICAgICAgY29tbWl0KE11dGF0aW9uVHlwZXMuU0VUX0FMTF9PUkRFUlMsIHJlcy5jb21wYW55T3JkZXJzUmVzcG9uc2UpOwogICAgICAgICAgICBjb21taXQoTXV0YXRpb25UeXBlcy5TRVRfQUxMX1RPVEFMX09SREVSUywgcmVzLnRvdGFsUmVjb3Jkcyk7CiAgICAgICAgICAgIGNvbW1pdChNdXRhdGlvblR5cGVzLlNFVF9MT0FERVIsIGZhbHNlKTsKCiAgICAgICAgICBjYXNlIDg6CiAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuc3RvcCgpOwogICAgICAgIH0KICAgICAgfQogICAgfSwgX2NhbGxlZSk7CiAgfSkpKCk7Cn0pOw=="},{"version":3,"sources":["/home/tamanna/htdocs/carconfiguratorfrontend/node_modules/eslint-loader/index.js??ref--13-0!/home/tamanna/htdocs/carconfiguratorfrontend/src/store/orders/actions.ts"],"names":[],"mappings":";;;AACA,SAAoB,aAApB,QAAyC,aAAzC;AAGA,OAAO,OAAP,MAAoB,YAApB;AAGA,OAAA,IAAY,iBAAZ;;AAAA,CAAA,UAAY,iBAAZ,EAA6B;AACzB,EAAA,iBAAA,CAAA,eAAA,CAAA,GAAA,eAAA;AACH,CAFD,EAAY,iBAAiB,KAAjB,iBAAiB,GAAA,EAAA,CAA7B;;AAYA,OAAO,IAAM,OAAO,uBACT,iBAAiB,CAAC,aADT,kBACoC,IADpC,EACwC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAd,YAAA,MAAc,QAAd,MAAc;AACpD,YAAA,MAAM,CAAC,aAAa,CAAC,UAAf,EAA2B,IAA3B,CAAN;AADoD;AAAA,mBAElC,OAAO,CAAC,eAAR,CAAwB,IAAI,CAAC,KAA7B,CAFkC;;AAAA;AAE9C,YAAA,GAF8C;AAGpD,YAAA,MAAM,CAAC,aAAa,CAAC,cAAf,EAA+B,GAAG,CAAC,qBAAnC,CAAN;AACA,YAAA,MAAM,CAAC,aAAa,CAAC,oBAAf,EAAqC,GAAG,CAAC,YAAzC,CAAN;AACA,YAAA,MAAM,CAAC,aAAa,CAAC,UAAf,EAA2B,KAA3B,CAAN;;AALoD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMvD,CAPe,CAAb","sourcesContent":["import { ActionContext, ActionTree } from 'vuex'\nimport { Mutations, MutationTypes } from './mutations'\nimport { State } from './index'\nimport type { State as RootState } from '@/store'\nimport authApi from '@/api/Auth'\nimport { userQuery } from '@/types'\n\nexport enum ordersActionTypes {\n    GET_ALLORDERS = 'GET_ALLORDERS'\n}\n\ntype AugmentedActionContext = {\n    commit<K extends keyof Mutations>(key: K, payload: Parameters<Mutations[K]>[1]): ReturnType<Mutations[K]>;\n} & Omit<ActionContext<State, RootState>, 'commit'>\n\nexport interface Actions {\n    [ordersActionTypes.GET_ALLORDERS]({ commit }: AugmentedActionContext, payload: userQuery): void;\n}\n\nexport const actions: ActionTree<State, RootState> & Actions = {\n    async [ordersActionTypes.GET_ALLORDERS]({ commit }, data) {\n        commit(MutationTypes.SET_LOADER, true)\n        const res = await authApi.getAllCarOrders(data.query)\n        commit(MutationTypes.SET_ALL_ORDERS, res.companyOrdersResponse)\n        commit(MutationTypes.SET_ALL_TOTAL_ORDERS, res.totalRecords)\n        commit(MutationTypes.SET_LOADER, false)\n    }\n}\n\n"],"sourceRoot":""}]}