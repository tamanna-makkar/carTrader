{"remainingRequest":"/home/tamanna/htdocs/carconfiguratorfrontend/node_modules/babel-loader/lib/index.js!/home/tamanna/htdocs/carconfiguratorfrontend/node_modules/ts-loader/index.js??ref--14-2!/home/tamanna/htdocs/carconfiguratorfrontend/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/tamanna/htdocs/carconfiguratorfrontend/node_modules/vue-loader-v16/dist/index.js??ref--0-1!/home/tamanna/htdocs/carconfiguratorfrontend/src/components/superAdminUpdate.vue?vue&type=script&lang=ts","dependencies":[{"path":"/home/tamanna/htdocs/carconfiguratorfrontend/src/components/superAdminUpdate.vue","mtime":1691610165528},{"path":"/home/tamanna/htdocs/carconfiguratorfrontend/node_modules/cache-loader/dist/cjs.js","mtime":1691610247617},{"path":"/home/tamanna/htdocs/carconfiguratorfrontend/node_modules/babel-loader/lib/index.js","mtime":1691610247572},{"path":"/home/tamanna/htdocs/carconfiguratorfrontend/node_modules/ts-loader/index.js","mtime":1691610259533},{"path":"/home/tamanna/htdocs/carconfiguratorfrontend/node_modules/cache-loader/dist/cjs.js","mtime":1691610247617},{"path":"/home/tamanna/htdocs/carconfiguratorfrontend/node_modules/vue-loader-v16/dist/index.js","mtime":1691610261934}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/home/tamanna/htdocs/carconfiguratorfrontend/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/tamanna/htdocs/carconfiguratorfrontend/node_modules/vue-loader-v16/dist/index.js??ref--0-1!/home/tamanna/htdocs/carconfiguratorfrontend/src/components/superAdminUpdate.vue?vue&type=script&lang=ts"],"names":[],"mappings":"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","sourcesContent":["\nimport { ref, defineComponent, onMounted, reactive, onUnmounted, computed } from 'vue'\nimport InputElement from '@/components/UI/Input.vue'\nimport Dropdown from '@/components/UI/Dropdown.vue'\nimport toggleableContent from '@/components/toggleableContent.vue'\nimport ConvertToCommas from '@/filters/ConvertToCommas'\nimport Loader from '@/components/UI/Loader.vue'\nimport { superAdminCompanyActionTypes } from '@/store/superAdminCompany/actions'\nimport { CompanyActionTypes } from '@/store/company/actions'\nimport { UsersActionTypes } from '@/store/users/actions'\nimport { useStore } from '@/store'\nimport Button from '@/components/UI/Button.vue'\nimport { MutationTypes } from '@/store/company/mutations'\nimport { superAdminMutationTypes } from '@/store/superAdminCompany/mutations'\nimport { useRouter } from 'vue-router'\nimport { useRoute } from 'vue-router'\nexport default defineComponent({\n  name: 'Home',\n  setup() {\n    const route = useRoute()\n    const store = useStore()\n    const router = useRouter()\n    const file = ref('')\n    const selectedRow = ref()\n    const loader = computed(() => store.state.superAdminCompany.loader)\n    const companyError = computed(() => store.state.superAdminCompany.companyError)\n    const superAdminCompanyId = computed(() => store.state.superAdminCompany.superAdminCompanyId)\n    const companyDetailsState = computed(() => store.state.company.getCompanyById)\n    const companyLeaseRate = computed(() => store.state.superAdminCompany.companyLeaseRate)\n    const getAllUsers = computed(() => store.state.users.getAllUsers)\n    const leaseRateError = computed(() => store.state.superAdminCompany.leaseRateError)\n    const sectionToggleValues = reactive({ value: [true, true, true] })\n    const companyDetailsErrors = reactive({})\n    const leaseRateErrors = reactive({})\n    const companyDetails = reactive({\n      name: '',\n      email: '',\n      phoneNumber: '',\n      address: '',\n      postalCode: '',\n      city: '',\n      userAgreementCopyEmail: [],\n      quotationRequestEmail: [],\n      logo: {}\n    })\n    const leaseRateDetails = reactive({\n      value: {\n        leaserateOperator: '+',\n        leaserateValue: 0,\n        leaserateType: '%',\n        fuelOperator: '-',\n        fuelValue: 0,\n        fuelType: '$',\n        months36: 0,\n        months48: 0,\n        months60: 0,\n        biggerTyres: 0\n      }\n    })\n    const typeItems = reactive(['%', '€'])\n    const operatorItems = reactive(['+', '-'])\n    const getCompanyById = async () => {\n      await store.dispatch(CompanyActionTypes.GET_COMPANYBYID, { companyId: route.params.id })\n      companyDetails.name = companyDetailsState.value.name\n      companyDetails.email = companyDetailsState.value.email\n      companyDetails.phoneNumber = companyDetailsState.value.phoneNumber\n      companyDetails.address = companyDetailsState.value.address\n      companyDetails.postalCode = companyDetailsState.value.postalCode\n      companyDetails.city = companyDetailsState.value.city\n      if (companyDetailsState.value.logo)\n        file.value = `data:${companyDetailsState.value.logoType};base64,${companyDetailsState.value.logo}`\n      if (\n        companyDetailsState.value.userAgreementCopyEmail == null ||\n        !companyDetailsState.value.userAgreementCopyEmail.length\n      ) {\n        companyDetails.userAgreementCopyEmail = [{ email: '', type: 'add' }]\n      } else {\n        companyDetails.userAgreementCopyEmail = companyDetailsState.value.userAgreementCopyEmail.map((item) => {\n          return { email: item, type: 'delete' }\n        })\n        companyDetails.userAgreementCopyEmail.push({ email: '', type: 'add' })\n      }\n\n      if (\n        companyDetailsState.value.quotationRequestEmail == null ||\n        !companyDetailsState.value.quotationRequestEmail.length\n      ) {\n        companyDetails.quotationRequestEmail = [{ email: '', type: 'add' }]\n      } else {\n        companyDetails.quotationRequestEmail = companyDetailsState.value.quotationRequestEmail.map((item) => {\n          return { email: item, type: 'delete' }\n        })\n        companyDetails.quotationRequestEmail.push({ email: '', type: 'add' })\n      }\n    }\n    const onColumnInput = (option) => {\n      if (option['type'] == 'agreementMail') {\n        selectedRow.value = companyDetails.userAgreementCopyEmail\n      } else if (option['type'] == 'quotationEmail') {\n        selectedRow.value = companyDetails.quotationRequestEmail\n      }\n      selectedRow.value[option['index']][option.keyName] = option['item']\n    }\n    const getUserById = async () => {\n      await store.dispatch(UsersActionTypes.GET_ALLUSERS, {\n        companyId: route.params.id,\n        query: { page: 1, withRoles: 2 }\n      })\n    }\n    const getLeaseRate = async () => {\n      await store.dispatch(superAdminCompanyActionTypes.GET_COMPANY_LEASERATE, { companyId: route.params.id })\n      if (Object.keys(companyLeaseRate.value).length) {\n        leaseRateDetails.value.leaserateOperator = companyLeaseRate.value.leaserateOperator\n        leaseRateDetails.value.leaserateValue = companyLeaseRate.value.leaserateValue\n        leaseRateDetails.value.leaserateType =\n          companyLeaseRate.value.leaserateType == '$' ? '€' : companyLeaseRate.value.leaserateType\n        leaseRateDetails.value.fuelOperator = companyLeaseRate.value.fuelOperator\n        leaseRateDetails.value.fuelValue = companyLeaseRate.value.fuelValue\n        leaseRateDetails.value.fuelType = companyLeaseRate.value.fuelType == '$' ? '€' : companyLeaseRate.value.fuelType\n        leaseRateDetails.value.months36 = companyLeaseRate.value.months36\n        leaseRateDetails.value.months48 = companyLeaseRate.value.months48\n        leaseRateDetails.value.months60 = companyLeaseRate.value.months60\n        leaseRateDetails.value.biggerTyres = companyLeaseRate.value.biggerTyres\n      }\n    }\n    onMounted(async () => {\n      if (route.params.id) {\n        await getCompanyById()\n        await getUserById()\n        await getLeaseRate()\n      }\n    })\n    const fileChange = (event) => {\n      const fileDetails = event.target.files\n      companyDetails['logo'] = fileDetails[0]\n      file.value = URL.createObjectURL(fileDetails[0])\n    }\n    const removeImage = () => {\n      const blah = document.querySelector('#blah') as HTMLImageElement\n      if (blah != null) {\n        blah.src = ''\n      }\n      file.value = ''\n      companyDetails['logo'] = {}\n      store.dispatch(superAdminCompanyActionTypes.DELETE_COMPANY_LOGO, { companyId: route.params.id })\n    }\n    const validatePhoneNumber = (value) => {\n      // validate dutch numbers\n      const regex = new RegExp(\n        '(^[+][0-9]{2}|^[+][0-9]{2}(0)|^([+][0-9]{2})(0)|^00[0-9]{2}|^0)([0-9]{9}$|[0-9-s]{10}$)'\n      )\n      return regex.test(value)\n    }\n    const validateEmail = (value) => {\n      // eslint-disable-next-line no-useless-escape\n      const regex = new RegExp('[a-z0-9]+@[a-z]+\\.[a-z]{2,3}')\n      return regex.test(value)\n    }\n    const scrollToSection = (sectionId) => {\n      const element = document.querySelector(`#${sectionId}`) as HTMLElement\n      element.scrollIntoView({\n        behavior: 'smooth'\n      })\n    }\n    const removeType = (type) => {\n      const tempEmail = JSON.parse(JSON.stringify(type))\n      const emailArr = []\n      tempEmail.forEach((item) => {\n        if (item.email) emailArr.push(item.email.toString())\n      })\n      return emailArr\n    }\n    const validateSections = () => {\n      delete companyDetailsErrors['nameError']\n      delete companyDetailsErrors['emailError']\n      delete companyDetailsErrors['emailValidationError']\n      delete companyDetailsErrors['phoneNumberError']\n      delete companyDetailsErrors['phoneNumberValidationError']\n      delete companyDetailsErrors['addressError']\n      delete companyDetailsErrors['postalCodeError']\n      delete companyDetailsErrors['cityError']\n      delete companyDetailsErrors['agreementEmailError']\n      delete companyDetailsErrors['quotationEmailError']\n      let sectionId = ''\n      if (!companyDetails.name) {\n        companyDetailsErrors['nameError'] = 'required'\n        sectionId = 'companyDetails'\n      }\n      if (!companyDetails.email) {\n        companyDetailsErrors['emailError'] = 'required'\n        sectionId = 'companyDetails'\n      }\n      if (companyDetails.email && !validateEmail(companyDetails.email)) {\n        companyDetailsErrors['emailValidationError'] = 'required'\n        sectionId = 'companyDetails'\n      }\n      if (!companyDetails.phoneNumber) {\n        companyDetailsErrors['phoneNumberError'] = 'required'\n        sectionId = 'companyDetails'\n      }\n      if (companyDetails.phoneNumber && !validatePhoneNumber(companyDetails.phoneNumber)) {\n        companyDetailsErrors['phoneNumberValidationError'] = 'required'\n        sectionId = 'companyDetails'\n      }\n      if (!companyDetails.address) {\n        companyDetailsErrors['addressError'] = 'required'\n        sectionId = 'companyDetails'\n      }\n      if (!companyDetails.postalCode) {\n        companyDetailsErrors['postalCodeError'] = 'required'\n        sectionId = 'companyDetails'\n      }\n      if (!companyDetails.city) {\n        companyDetailsErrors['cityError'] = 'required'\n        sectionId = 'companyDetails'\n      }\n      if (companyDetails.userAgreementCopyEmail.length) {\n        const tmpCheck = removeType(companyDetails.userAgreementCopyEmail)\n        tmpCheck.forEach((mail) => {\n          if (!validateEmail(mail)) companyDetailsErrors['agreementEmailError'] = 'required'\n        })\n      }\n      if (companyDetails.quotationRequestEmail.length) {\n        const tmpCheck = removeType(companyDetails.quotationRequestEmail)\n        tmpCheck.forEach((mail) => {\n          if (!validateEmail(mail)) companyDetailsErrors['quotationEmailError'] = 'required'\n        })\n      }\n      if (Object.getOwnPropertyNames(companyDetailsErrors).length === 0) {\n        return true\n      } else {\n        scrollToSection(sectionId)\n      }\n    }\n    const onInputCompanyDetails = (value, key) => {\n      companyDetails[key] = value\n    }\n    const selectleaseRateOperator = (value) => {\n      leaseRateDetails.value['leaserateOperator'] = value\n    }\n    const selectLeaseRateType = (value) => {\n      leaseRateDetails.value['leaserateType'] = value\n    }\n    const selectfuelOperator = (value) => {\n      leaseRateDetails.value['fuelOperator'] = value\n    }\n    const selectfuelType = (value) => {\n      leaseRateDetails.value['fuelType'] = value\n    }\n    const onUpdateLeaseRateDetails = (value, key) => {\n      leaseRateDetails.value[key] = value\n    }\n    const convertToNumber = (selectedOption) => {\n      return parseFloat(selectedOption.replace(',', '.'))\n    }\n    const updateLeaseRate = async () => {\n      leaseRateDetails.value.leaserateValue = convertToNumber(leaseRateDetails.value.leaserateValue.toString())\n      leaseRateDetails.value.leaserateType =\n        leaseRateDetails.value.leaserateType == '€' ? '$' : leaseRateDetails.value.leaserateType\n      leaseRateDetails.value.fuelValue = convertToNumber(leaseRateDetails.value.fuelValue.toString())\n      leaseRateDetails.value.fuelType = leaseRateDetails.value.fuelType == '€' ? '$' : leaseRateDetails.value.fuelType\n      leaseRateDetails.value.months36 = convertToNumber(leaseRateDetails.value.months36.toString())\n      leaseRateDetails.value.months48 = convertToNumber(leaseRateDetails.value.months48.toString())\n      leaseRateDetails.value.months60 = convertToNumber(leaseRateDetails.value.months60.toString())\n      leaseRateDetails.value.biggerTyres = convertToNumber(leaseRateDetails.value.biggerTyres.toString())\n      store.dispatch(superAdminCompanyActionTypes.UPDATE_COMPANY_LEASERATE, {\n        companyId: route.params.id,\n        leaseRateId: companyLeaseRate.value.id,\n        body: leaseRateDetails.value\n      })\n    }\n    const validateFloat = (value) => {\n      // eslint-disable-next-line no-useless-escape\n      const regex = /^\\d+([\\,]\\d+)*([\\.]\\d+)?$/gm\n      return regex.test(value)\n    }\n    const validateLeaseRate = () => {\n      delete leaseRateErrors['leaserateValueError']\n      delete leaseRateErrors['fuelValueError']\n      delete leaseRateErrors['months36Error']\n      delete leaseRateErrors['months48Error']\n      delete leaseRateErrors['months60Error']\n      delete leaseRateErrors['biggerTyresError']\n      if (leaseRateDetails.value.leaserateValue && !validateFloat(leaseRateDetails.value.leaserateValue)) {\n        leaseRateErrors['leaserateValueError'] = 'required'\n      }\n      if (leaseRateDetails.value.fuelValue && !validateFloat(leaseRateDetails.value.fuelValue)) {\n        leaseRateErrors['fuelValueError'] = 'required'\n      }\n      if (leaseRateDetails.value.months36 && !validateFloat(leaseRateDetails.value.months36)) {\n        leaseRateErrors['months36Error'] = 'required'\n      }\n      if (leaseRateDetails.value.months48 && !validateFloat(leaseRateDetails.value.months48)) {\n        leaseRateErrors['months48Error'] = 'required'\n      }\n      if (leaseRateDetails.value.months60 && !validateFloat(leaseRateDetails.value.months60)) {\n        leaseRateErrors['months60Error'] = 'required'\n      }\n      if (leaseRateDetails.value.biggerTyres && !validateFloat(leaseRateDetails.value.biggerTyres)) {\n        leaseRateErrors['biggerTyresError'] = 'required'\n      }\n      if (Object.getOwnPropertyNames(leaseRateErrors).length === 0) {\n        return true\n      }\n    }\n    const saveCompany = async () => {\n      const formData = new FormData()\n      formData.append('name', JSON.stringify(companyDetails.name))\n      formData.append('email', JSON.stringify(companyDetails.email))\n      formData.append('phoneNumber', JSON.stringify(companyDetails.phoneNumber))\n      formData.append('address', JSON.stringify(companyDetails.address))\n      formData.append('postalCode', JSON.stringify(companyDetails.postalCode))\n      formData.append('city', JSON.stringify(companyDetails.city))\n      formData.append('logo', companyDetails.logo as File)\n      formData.append('userAgreementCopyEmail', JSON.stringify(removeType(companyDetails.userAgreementCopyEmail)))\n      formData.append('quotationRequestEmail', JSON.stringify(removeType(companyDetails.quotationRequestEmail)))\n      formData.append('_method', 'PUT')\n      await store.dispatch(superAdminCompanyActionTypes.UPDATE_COMPANY, { companyId: route.params.id, body: formData })\n    }\n    const discardCompany = () => {\n      router.push({ name: 'Dashboard' })\n    }\n    const closePopup = () => {\n      store.commit(MutationTypes.SET_ISCOMPANYUPDATED, false)\n    }\n    const toggleSection = (index) => {\n      const closeAllOther = sectionToggleValues.value.map(function (item, itemIndex) {\n        if (itemIndex === index) {\n          item = !item\n        } else {\n          item = false\n        }\n        return item\n      })\n      sectionToggleValues.value = closeAllOther\n    }\n    const goToNext = async (type) => {\n      let sectionID = ''\n      if (type === 'step1' && validateSections()) {\n        await saveCompany()\n        if (companyError.value == '') {\n          sectionID = 'adjustLeaseRateDetails'\n        }\n      } else if (type === 'step2' && validateLeaseRate()) {\n        await updateLeaseRate()\n        if (leaseRateError.value == '') {\n          sectionID = 'firstAdminCompanyDetails'\n        }\n      }\n      if (sectionID !== '')\n        setTimeout(() => {\n          scrollToSection(sectionID)\n        }, 300)\n    }\n    const addRow = (item) => {\n      if (item['type'] == 'agreementMail') {\n        selectedRow.value = companyDetails.userAgreementCopyEmail\n        selectedRow.value.push({\n          email: '',\n          type: 'add'\n        })\n      } else if (item['type'] == 'quotationEmail') {\n        selectedRow.value = companyDetails.quotationRequestEmail\n        selectedRow.value.push({\n          email: '',\n          type: 'add'\n        })\n      }\n      selectedRow.value[item['index']]['type'] = 'delete'\n    }\n    const deleteRow = (item) => {\n      if (item['type'] == 'agreementMail') {\n        selectedRow.value = companyDetails.userAgreementCopyEmail\n      } else if (item['type'] == 'quotationEmail') {\n        selectedRow.value = companyDetails.quotationRequestEmail\n      }\n      selectedRow.value.splice(item['index'], 1)\n    }\n    onUnmounted(() => {\n      store.commit(superAdminMutationTypes.SET_COMPANY_ERROR, '')\n      store.commit(superAdminMutationTypes.SET_USER_ERROR, '')\n      store.commit(superAdminMutationTypes.SET_SUPERADMIN_COMPANYID, null)\n      store.commit(superAdminMutationTypes.SET_LEASE_RATE_ERROR, '')\n      store.commit(superAdminMutationTypes.SET_COMPANY_LEASE_RATE, {})\n    })\n    return {\n      file,\n      fileChange,\n      removeImage,\n      companyDetails,\n      loader,\n      saveCompany,\n      discardCompany,\n      onInputCompanyDetails,\n      companyDetailsErrors,\n      closePopup,\n      operatorItems,\n      leaseRateDetails,\n      selectleaseRateOperator,\n      onUpdateLeaseRateDetails,\n      ConvertToCommas,\n      typeItems,\n      selectLeaseRateType,\n      selectfuelOperator,\n      selectfuelType,\n      companyError,\n      superAdminCompanyId,\n      getAllUsers,\n      toggleSection,\n      sectionToggleValues,\n      goToNext,\n      leaseRateError,\n      leaseRateErrors,\n      addRow,\n      deleteRow,\n      onColumnInput\n    }\n  },\n  components: {\n    InputElement,\n    Loader,\n    Button,\n    Dropdown,\n    toggleableContent\n  }\n})\n"],"sourceRoot":""}]}