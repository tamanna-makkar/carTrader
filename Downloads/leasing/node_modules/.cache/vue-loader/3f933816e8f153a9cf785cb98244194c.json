{"remainingRequest":"/home/tamanna/htdocs/carconfiguratorfrontend/node_modules/vue-loader-v16/dist/index.js??ref--0-1!/home/tamanna/htdocs/carconfiguratorfrontend/src/components/UI/CustomSlider.vue?vue&type=style&index=0&id=29ffb1e6&lang=sass","dependencies":[{"path":"/home/tamanna/htdocs/carconfiguratorfrontend/src/components/UI/CustomSlider.vue","mtime":1678204643794},{"path":"/home/tamanna/htdocs/carconfiguratorfrontend/node_modules/css-loader/dist/cjs.js","mtime":1691610261655},{"path":"/home/tamanna/htdocs/carconfiguratorfrontend/node_modules/vue-loader-v16/dist/stylePostLoader.js","mtime":1691610261934},{"path":"/home/tamanna/htdocs/carconfiguratorfrontend/node_modules/postcss-loader/src/index.js","mtime":1691610261845},{"path":"/home/tamanna/htdocs/carconfiguratorfrontend/node_modules/sass-loader/dist/cjs.js","mtime":1691610266130},{"path":"/home/tamanna/htdocs/carconfiguratorfrontend/node_modules/cache-loader/dist/cjs.js","mtime":1691610247617},{"path":"/home/tamanna/htdocs/carconfiguratorfrontend/node_modules/vue-loader-v16/dist/index.js","mtime":1691610261934}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CkBpbXBvcnQgJ352dWUtc2xpZGVyLWNvbXBvbmVudC9saWIvdGhlbWUvZGVmYXVsdC5zY3NzJwoubWVyZ2UtdG9vbHRpcAogIHRvcDogLTE4cHgKICBsZWZ0OiA1MCUKICAtd2Via2l0LXRyYW5zZm9ybTogdHJhbnNsYXRlKC01MCUsLTEwMCUpCiAgdHJhbnNmb3JtOiB0cmFuc2xhdGUoLTUwJSwtMTAwJSkKICBwb3NpdGlvbjogYWJzb2x1dGUK"},{"version":3,"sources":["/home/tamanna/htdocs/carconfiguratorfrontend/src/components/UI/CustomSlider.vue"],"names":[],"mappings":";AAsHA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACrD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EACX,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;EACT,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;EACR,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EACvC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EAC/B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC","file":"/home/tamanna/htdocs/carconfiguratorfrontend/src/components/UI/CustomSlider.vue","sourceRoot":"","sourcesContent":["<template>\n  <div class=\"slider-component\">\n    <vue-slider\n      ref=\"slider\"\n      v-model=\"sliderValue\"\n      :vData=\"sliderData\"\n      v-bind=\"sliderDataOptions\"\n      :tooltip=\"showMergeTooltip(sliderValue) ? 'none' : 'always'\"\n    >\n      <template v-slot:process=\"{ style }\">\n        <div class=\"vue-slider-process\" :style=\"style\">\n          <div\n            v-if=\"showMergeTooltip(sliderValue)\"\n            :class=\"['merge-tooltip', 'vue-slider-dot-tooltip-inner', 'vue-slider-dot-tooltip-inner-top']\"\n          >\n            €{{ sliderValue[0] }} - €{{ sliderValue[1] }}\n          </div>\n        </div>\n      </template>\n      <template v-slot:tooltip=\"{ value }\">\n        <div class=\"vue-slider-dot-tooltip-inner\">\n          <span v-if=\"value == 0\" class=\"first-index vue-slider-dot-tooltip-text\">€{{ value }}</span>\n          <span v-else-if=\"value == 2500\" class=\"last-index vue-slider-dot-tooltip-text\">€{{ value }}</span>\n          <span v-else class=\"vue-slider-dot-tooltip-text\">€{{ value }}</span>\n        </div>\n      </template>\n    </vue-slider>\n    <div class=\"placeholders\">\n      <span class=\"t2\">€ 0</span>\n      <span class=\"t2\">{{ $t('_wizard.step1.any') }}</span>\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, ref, reactive, watch, onMounted } from 'vue'\nimport { useStore } from '@/store'\nimport VueSlider from 'vue-slider-component'\nimport sliderOptions from '@/mixins/sliderOptions'\nexport default defineComponent({\n  name: 'CustomSlider',\n  components: {\n    VueSlider\n  },\n  props: {\n    filter: {\n      type: Boolean,\n      default: false\n    }\n  },\n  emits: ['changeFilterSlider', 'selectedBudget'],\n  setup(props, { emit }) {\n    const store = useStore()\n    const { sliderDataOptions } = sliderOptions()\n    const sliderValue = sessionStorage.getItem('budget')\n      ? ref(JSON.parse(sessionStorage.getItem('budget') || ''))\n      : ref([0, 2500])\n    onMounted(() => {\n      // sessionStorage.setItem('budget', JSON.stringify(sliderValue.value))\n    })\n    const sliderData = reactive([\n      0,\n      50,\n      100,\n      150,\n      200,\n      250,\n      300,\n      350,\n      400,\n      450,\n      500,\n      600,\n      700,\n      800,\n      900,\n      1000,\n      1250,\n      1500,\n      1750,\n      2000,\n      2250,\n      2500\n    ])\n    watch(\n      () => [...sliderValue.value],\n      (currentValue) => {\n        sessionStorage.setItem('budget', JSON.stringify(currentValue))\n        emit('selectedBudget', currentValue)\n      }\n    )\n    const showMergeTooltip = (value) => {\n      let isMerged = false\n      if (value[1] <= 500) {\n        isMerged = value[1] - value[0] === 50\n      } else if (value[1] > 500 && value[1] <= 1000) {\n        isMerged = value[1] - value[0] === 100\n      } else if (value[1] > 1000) {\n        isMerged = value[1] - value[0] === 250\n      }\n      return isMerged\n    }\n    const changeFilterSlider = ($event) => {\n      emit('changeFilterSlider', $event)\n    }\n    return {\n      store,\n      showMergeTooltip,\n      sliderValue,\n      sliderDataOptions,\n      sliderData,\n      changeFilterSlider\n    }\n  }\n})\n</script>\n\n<style lang=\"sass\">\n@import '~vue-slider-component/lib/theme/default.scss'\n.merge-tooltip\n  top: -18px\n  left: 50%\n  -webkit-transform: translate(-50%,-100%)\n  transform: translate(-50%,-100%)\n  position: absolute\n</style>\n"]}]}