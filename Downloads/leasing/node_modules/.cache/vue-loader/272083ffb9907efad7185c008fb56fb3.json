{"remainingRequest":"/home/tamanna/htdocs/carconfiguratorfrontend/node_modules/vue-loader-v16/dist/index.js??ref--0-1!/home/tamanna/htdocs/carconfiguratorfrontend/src/components/addFacility.vue?vue&type=script&lang=ts","dependencies":[{"path":"/home/tamanna/htdocs/carconfiguratorfrontend/src/components/addFacility.vue","mtime":1678204643794},{"path":"/home/tamanna/htdocs/carconfiguratorfrontend/node_modules/cache-loader/dist/cjs.js","mtime":1691610247617},{"path":"/home/tamanna/htdocs/carconfiguratorfrontend/node_modules/babel-loader/lib/index.js","mtime":1691610247572},{"path":"/home/tamanna/htdocs/carconfiguratorfrontend/node_modules/ts-loader/index.js","mtime":1691610259533},{"path":"/home/tamanna/htdocs/carconfiguratorfrontend/node_modules/cache-loader/dist/cjs.js","mtime":1691610247617},{"path":"/home/tamanna/htdocs/carconfiguratorfrontend/node_modules/vue-loader-v16/dist/index.js","mtime":1691610261934}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CmltcG9ydCB7IGRlZmluZUNvbXBvbmVudCB9IGZyb20gJ3Z1ZScKaW1wb3J0IElucHV0RWxlbWVudCBmcm9tICdAL2NvbXBvbmVudHMvVUkvSW5wdXQudnVlJwppbXBvcnQgQnV0dG9uIGZyb20gJ0AvY29tcG9uZW50cy9VSS9CdXR0b24udnVlJwppbXBvcnQgeyB0YXhTZXR0aW5nc1R5cGUgfSBmcm9tICdAL3R5cGVzJwppbXBvcnQgQ29udmVydFRvQ29tbWFzIGZyb20gJ0AvZmlsdGVycy9Db252ZXJ0VG9Db21tYXMnCmV4cG9ydCBkZWZhdWx0IGRlZmluZUNvbXBvbmVudCh7CiAgcHJvcHM6IHsKICAgIGZhY2lsaXR5OiB7CiAgICAgIHR5cGU6IEFycmF5IGFzICgpID0+IHRheFNldHRpbmdzVHlwZVtdLAogICAgICBkZWZhdWx0OiAoKSA9PiBbXQogICAgfSwKICAgIHR5cGU6IHsKICAgICAgdHlwZTogU3RyaW5nLAogICAgICBkZWZhdWx0OiAnJwogICAgfSwKICAgIHR5cGVPZjogewogICAgICB0eXBlOiBTdHJpbmcsCiAgICAgIGRlZmF1bHQ6ICcnCiAgICB9CiAgfSwKICBjb21wb25lbnRzOiB7CiAgICBJbnB1dEVsZW1lbnQsCiAgICBCdXR0b24KICB9LAogIHNldHVwKHByb3BzKSB7CiAgICBjb25zdCBnZXRGYWNpbGl0eVByb3AgPSAoKSA9PiB7CiAgICAgIGxldCBmYWNpbGl0eVR5cGUKICAgICAgaWYgKHByb3BzLnR5cGUgPT0gJ2NoYXJnaW5nRmFjaWxpdHknKSB7CiAgICAgICAgZmFjaWxpdHlUeXBlID0gJ2NoYXJnaW5nRmFjaWxpdHknCiAgICAgIH0gZWxzZSB7CiAgICAgICAgZmFjaWxpdHlUeXBlID0gJ2FjY2Vzc29yeScKICAgICAgfQogICAgICByZXR1cm4gZmFjaWxpdHlUeXBlCiAgICB9CiAgICByZXR1cm4geyBnZXRGYWNpbGl0eVByb3AsIENvbnZlcnRUb0NvbW1hcyB9CiAgfQp9KQo="},{"version":3,"sources":["/home/tamanna/htdocs/carconfiguratorfrontend/src/components/addFacility.vue"],"names":[],"mappings":";AAiEA,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;AACpC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACnD,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC9C,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACxC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACtD,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EAC7B,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;IACL,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;MACR,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MACtC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC;IAClB,CAAC;IACD,CAAC,CAAC,CAAC,CAAC,EAAE;MACJ,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MACZ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;IACZ,CAAC;IACD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;MACN,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MACZ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;IACZ;EACF,CAAC;EACD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;IACV,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACZ,CAAC,CAAC,CAAC,CAAC,CAAC;EACP,CAAC;EACD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;IACX,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE;MAC5B,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MACf,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;QACpC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MAClC,EAAE,CAAC,CAAC,CAAC,EAAE;QACL,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MAC3B;MACA,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACpB;IACA,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;EAC5C;AACF,CAAC","file":"/home/tamanna/htdocs/carconfiguratorfrontend/src/components/addFacility.vue","sourceRoot":"","sourcesContent":["<template>\n  <div class=\"add-facilities\">\n    <slot />\n    <div v-for=\"(item, index) in facility\" :key=\"index\" class=\"wrap\">\n      <div class=\"column\">\n        <InputElement\n          type=\"text\"\n          :isFacility=\"true\"\n          currencyPlaceholder=\"gr/km\"\n          currencyPlaceholderPosition=\"right\"\n          :value=\"item.column1\"\n          @update:value=\"$emit('onColumnInput', { item: $event, index: index, type: type, keyName: 'column1' })\"\n          >Column I</InputElement\n        >\n      </div>\n      <div class=\"column\">\n        <InputElement\n          type=\"text\"\n          :isFacility=\"true\"\n          currencyPlaceholder=\"gr/km\"\n          currencyPlaceholderPosition=\"right\"\n          :value=\"item.column2\"\n          @update:value=\"$emit('onColumnInput', { item: $event, index: index, type: type, keyName: 'column2' })\"\n          >Column II</InputElement\n        >\n      </div>\n      <div class=\"column\">\n        <InputElement\n          type=\"text\"\n          :isFacility=\"true\"\n          currencyPlaceholder=\"€\"\n          :value=\"ConvertToCommas(item.column3)\"\n          @update:value=\"$emit('onColumnInput', { item: $event, index: index, type: type, keyName: 'column3' })\"\n          >Column III</InputElement\n        >\n      </div>\n      <div class=\"column\">\n        <InputElement\n          type=\"text\"\n          :isFacility=\"true\"\n          currencyPlaceholder=\"€\"\n          :value=\"ConvertToCommas(item.column4)\"\n          @update:value=\"$emit('onColumnInput', { item: $event, index: index, type: type, keyName: 'column4' })\"\n          >Column IV</InputElement\n        >\n      </div>\n      <div class=\"button-wrap\">\n        <Button\n          v-if=\"item['type'] == 'add'\"\n          :text=\"$t('_generalTerms.add')\"\n          class=\"add-button active\"\n          buttonType=\"light add--left\"\n          @onClick=\"$emit('add', { index: index, type: type, typeOf: item['typeOf'] })\"\n        />\n        <Button\n          v-else\n          :text=\"$t('_generalTerms.delete')\"\n          buttonType=\"light close--left\"\n          @onClick=\"$emit('delete', { index: index, type: type })\"\n        />\n      </div>\n    </div>\n  </div>\n</template>\n<script lang=\"ts\">\nimport { defineComponent } from 'vue'\nimport InputElement from '@/components/UI/Input.vue'\nimport Button from '@/components/UI/Button.vue'\nimport { taxSettingsType } from '@/types'\nimport ConvertToCommas from '@/filters/ConvertToCommas'\nexport default defineComponent({\n  props: {\n    facility: {\n      type: Array as () => taxSettingsType[],\n      default: () => []\n    },\n    type: {\n      type: String,\n      default: ''\n    },\n    typeOf: {\n      type: String,\n      default: ''\n    }\n  },\n  components: {\n    InputElement,\n    Button\n  },\n  setup(props) {\n    const getFacilityProp = () => {\n      let facilityType\n      if (props.type == 'chargingFacility') {\n        facilityType = 'chargingFacility'\n      } else {\n        facilityType = 'accessory'\n      }\n      return facilityType\n    }\n    return { getFacilityProp, ConvertToCommas }\n  }\n})\n</script>\n<style lang=\"sass\" scoped>\n.add-facilities\n  display: flex\n  flex-direction: column\n  flex: 1\n  margin: 2em 0 0 0\n  .wrap\n    display: flex\n    margin: 0 0 3em 0\n    align-items: flex-end\n    @media screen and (max-width: $mdBreakpoint)\n      flex-direction: column\n    .column\n      flex: 1.3\n      margin-right: 4em\n      position: relative\n      @media screen and (max-width: $mdBreakpoint)\n        width: 100%\n        margin-right: 0\n        margin-bottom: 2em\n        flex: initial\n    .button-wrap\n      display: flex\n      flex: 1\n      justify-content: flex-end\n    .column\n      height: 52px\n  .add-button\n    color: $colorWhite\n    pointer-events: none\n  button\n    height: 44px\n    padding: 0.5em 1.5em\n  .add-button.active\n    pointer-events: visible\n    color: $colorHubble\n    &:before\n      background-image: url(~@/assets/dark-plus.svg)\n</style>\n"]}]}