{"remainingRequest":"/home/tamanna/htdocs/carconfiguratorfrontend/node_modules/vue-loader-v16/dist/index.js??ref--0-1!/home/tamanna/htdocs/carconfiguratorfrontend/src/components/CarBodyType.vue?vue&type=style&index=0&id=650531f0&lang=sass&scoped=true","dependencies":[{"path":"/home/tamanna/htdocs/carconfiguratorfrontend/src/components/CarBodyType.vue","mtime":1678204643790},{"path":"/home/tamanna/htdocs/carconfiguratorfrontend/node_modules/css-loader/dist/cjs.js","mtime":1691610261655},{"path":"/home/tamanna/htdocs/carconfiguratorfrontend/node_modules/vue-loader-v16/dist/stylePostLoader.js","mtime":1691610261934},{"path":"/home/tamanna/htdocs/carconfiguratorfrontend/node_modules/postcss-loader/src/index.js","mtime":1691610261845},{"path":"/home/tamanna/htdocs/carconfiguratorfrontend/node_modules/sass-loader/dist/cjs.js","mtime":1691610266130},{"path":"/home/tamanna/htdocs/carconfiguratorfrontend/node_modules/cache-loader/dist/cjs.js","mtime":1691610247617},{"path":"/home/tamanna/htdocs/carconfiguratorfrontend/node_modules/vue-loader-v16/dist/index.js","mtime":1691610261934}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ci5jb250ZW50CiAgZmxleDogMQogIGRpc3BsYXk6IGZsZXgKICBmbGV4LXdyYXA6IHdyYXAKICAuYm9keS10eXBlCiAgICBkaXNwbGF5OiBmbGV4CiAgICBoZWlnaHQ6IDEyMHB4CiAgICBmbGV4OiAwIDAgMjIlCiAgICBib3JkZXItcmFkaXVzOiA1cHgKICAgIG1hcmdpbi1ib3R0b206IDIuM3JlbQogICAgYmFja2dyb3VuZDogJGNvbG9ySHViYmxlQmFja2dyb3VuZEdyZXkKICAgIEBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDU3N3B4KQogICAgICBtYXJnaW4tcmlnaHQ6IDQlCiAgICAgICY6bnRoLWNoaWxkKDQpLCAmOm50aC1jaGlsZCg4KQogICAgICAgIG1hcmdpbi1yaWdodDogMAogICAgQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogJHhzQnJlYWtwb2ludCkKICAgICAgZmxleDogMSAwIDQ4JQogICAgICAmOm50aC1jaGlsZCgybisxKQogICAgICAgIG1hcmdpbi1yaWdodDogNCUKICAgIC5pbmZvLWljb24KICAgICAgQGluY2x1ZGUgYmFja2dyb3VuZEltYWdlKCdpbmZvLnN2ZycpCiAgICAgIHdpZHRoOiAxLjhyZW0KICAgICAgaGVpZ2h0OiAxLjhyZW0KICAgICAgZGlzcGxheTogZmxleAogICAgICAmOmhvdmVyCiAgICAgICAgQGluY2x1ZGUgYmFja2dyb3VuZEltYWdlKCdpbmZvX2Rhcmsuc3ZnJykKLmZpbHRlci13cmFwCiAgZGlzcGxheTogYmxvY2sKICBjb2x1bW4tY291bnQ6IDIKICA+IGRpdgogICAgbWFyZ2luOiAwIDAgMWVtIDAK"},{"version":3,"sources":["/home/tamanna/htdocs/carconfiguratorfrontend/src/components/CarBodyType.vue"],"names":[],"mappings":"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","file":"/home/tamanna/htdocs/carconfiguratorfrontend/src/components/CarBodyType.vue","sourceRoot":"","sourcesContent":["<template>\n  <div class=\"content\" :class=\"{ 'filter-wrap': isFilter }\">\n    <div :class=\"{ 'body-type': !isFilter }\" v-for=\"(item, index) in checkboxesValues\" :key=\"index\">\n      <Checkbox :item=\"item\" :isFilter=\"isFilter\" :isChecked=\"item.isActive\" @onCheck=\"onCarBodyCheck\">\n        <template v-slot:body-type>\n          <i v-if=\"item['isInfo']\" class=\"info-icon\"></i>\n        </template>\n        <template v-if=\"!item['isDisabled'] && !isFilter\" v-slot:image>\n          <img :src=\"item.image\" />\n        </template>\n        <template v-if=\"item['isDisabled']\" v-slot:imageDisabled>\n          <img :src=\"item.imageDisabled\" />\n        </template>\n        <template v-slot:value>\n          {{ $t(getTranslatedBodyType(item.value)) }}\n        </template>\n      </Checkbox>\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent } from 'vue'\nimport Checkbox from '@/components/UI/Checkbox.vue'\nimport getTranslatedBodyType from '@/filters/getTranslatedBodyType'\nexport default defineComponent({\n  emits: ['onCarBodyCheck'],\n  components: {\n    Checkbox\n  },\n  props: {\n    checkboxesValues: {\n      type: Object,\n      default: () => ({})\n    },\n    isFilter: {\n      type: Boolean,\n      default: false\n    }\n  },\n  setup(props, { emit }) {\n    const onCarBodyCheck = ($event) => {\n      emit('onCarBodyCheck', $event)\n    }\n    return { onCarBodyCheck, getTranslatedBodyType }\n  }\n})\n</script>\n<style lang=\"sass\" scoped>\n.content\n  flex: 1\n  display: flex\n  flex-wrap: wrap\n  .body-type\n    display: flex\n    height: 120px\n    flex: 0 0 22%\n    border-radius: 5px\n    margin-bottom: 2.3rem\n    background: $colorHubbleBackgroundGrey\n    @media screen and (min-width: 577px)\n      margin-right: 4%\n      &:nth-child(4), &:nth-child(8)\n        margin-right: 0\n    @media screen and (max-width: $xsBreakpoint)\n      flex: 1 0 48%\n      &:nth-child(2n+1)\n        margin-right: 4%\n    .info-icon\n      @include backgroundImage('info.svg')\n      width: 1.8rem\n      height: 1.8rem\n      display: flex\n      &:hover\n        @include backgroundImage('info_dark.svg')\n.filter-wrap\n  display: block\n  column-count: 2\n  > div\n    margin: 0 0 1em 0\n</style>\n"]}]}