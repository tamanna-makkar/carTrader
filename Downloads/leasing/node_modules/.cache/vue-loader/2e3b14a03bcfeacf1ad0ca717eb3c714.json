{"remainingRequest":"/home/tamanna/htdocs/carconfiguratorfrontend/node_modules/vue-loader-v16/dist/index.js??ref--0-1!/home/tamanna/htdocs/carconfiguratorfrontend/src/components/addFacility.vue?vue&type=style&index=0&id=80f662f8&lang=sass&scoped=true","dependencies":[{"path":"/home/tamanna/htdocs/carconfiguratorfrontend/src/components/addFacility.vue","mtime":1678204643794},{"path":"/home/tamanna/htdocs/carconfiguratorfrontend/node_modules/css-loader/dist/cjs.js","mtime":1691610261655},{"path":"/home/tamanna/htdocs/carconfiguratorfrontend/node_modules/vue-loader-v16/dist/stylePostLoader.js","mtime":1691610261934},{"path":"/home/tamanna/htdocs/carconfiguratorfrontend/node_modules/postcss-loader/src/index.js","mtime":1691610261845},{"path":"/home/tamanna/htdocs/carconfiguratorfrontend/node_modules/sass-loader/dist/cjs.js","mtime":1691610266130},{"path":"/home/tamanna/htdocs/carconfiguratorfrontend/node_modules/cache-loader/dist/cjs.js","mtime":1691610247617},{"path":"/home/tamanna/htdocs/carconfiguratorfrontend/node_modules/vue-loader-v16/dist/index.js","mtime":1691610261934}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ci5hZGQtZmFjaWxpdGllcwogIGRpc3BsYXk6IGZsZXgKICBmbGV4LWRpcmVjdGlvbjogY29sdW1uCiAgZmxleDogMQogIG1hcmdpbjogMmVtIDAgMCAwCiAgLndyYXAKICAgIGRpc3BsYXk6IGZsZXgKICAgIG1hcmdpbjogMCAwIDNlbSAwCiAgICBhbGlnbi1pdGVtczogZmxleC1lbmQKICAgIEBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6ICRtZEJyZWFrcG9pbnQpCiAgICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW4KICAgIC5jb2x1bW4KICAgICAgZmxleDogMS4zCiAgICAgIG1hcmdpbi1yaWdodDogNGVtCiAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZQogICAgICBAbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiAkbWRCcmVha3BvaW50KQogICAgICAgIHdpZHRoOiAxMDAlCiAgICAgICAgbWFyZ2luLXJpZ2h0OiAwCiAgICAgICAgbWFyZ2luLWJvdHRvbTogMmVtCiAgICAgICAgZmxleDogaW5pdGlhbAogICAgLmJ1dHRvbi13cmFwCiAgICAgIGRpc3BsYXk6IGZsZXgKICAgICAgZmxleDogMQogICAgICBqdXN0aWZ5LWNvbnRlbnQ6IGZsZXgtZW5kCiAgICAuY29sdW1uCiAgICAgIGhlaWdodDogNTJweAogIC5hZGQtYnV0dG9uCiAgICBjb2xvcjogJGNvbG9yV2hpdGUKICAgIHBvaW50ZXItZXZlbnRzOiBub25lCiAgYnV0dG9uCiAgICBoZWlnaHQ6IDQ0cHgKICAgIHBhZGRpbmc6IDAuNWVtIDEuNWVtCiAgLmFkZC1idXR0b24uYWN0aXZlCiAgICBwb2ludGVyLWV2ZW50czogdmlzaWJsZQogICAgY29sb3I6ICRjb2xvckh1YmJsZQogICAgJjpiZWZvcmUKICAgICAgYmFja2dyb3VuZC1pbWFnZTogdXJsKH5AL2Fzc2V0cy9kYXJrLXBsdXMuc3ZnKQo="},{"version":3,"sources":["/home/tamanna/htdocs/carconfiguratorfrontend/src/components/addFacility.vue"],"names":[],"mappings":"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","file":"/home/tamanna/htdocs/carconfiguratorfrontend/src/components/addFacility.vue","sourceRoot":"","sourcesContent":["<template>\n  <div class=\"add-facilities\">\n    <slot />\n    <div v-for=\"(item, index) in facility\" :key=\"index\" class=\"wrap\">\n      <div class=\"column\">\n        <InputElement\n          type=\"text\"\n          :isFacility=\"true\"\n          currencyPlaceholder=\"gr/km\"\n          currencyPlaceholderPosition=\"right\"\n          :value=\"item.column1\"\n          @update:value=\"$emit('onColumnInput', { item: $event, index: index, type: type, keyName: 'column1' })\"\n          >Column I</InputElement\n        >\n      </div>\n      <div class=\"column\">\n        <InputElement\n          type=\"text\"\n          :isFacility=\"true\"\n          currencyPlaceholder=\"gr/km\"\n          currencyPlaceholderPosition=\"right\"\n          :value=\"item.column2\"\n          @update:value=\"$emit('onColumnInput', { item: $event, index: index, type: type, keyName: 'column2' })\"\n          >Column II</InputElement\n        >\n      </div>\n      <div class=\"column\">\n        <InputElement\n          type=\"text\"\n          :isFacility=\"true\"\n          currencyPlaceholder=\"€\"\n          :value=\"ConvertToCommas(item.column3)\"\n          @update:value=\"$emit('onColumnInput', { item: $event, index: index, type: type, keyName: 'column3' })\"\n          >Column III</InputElement\n        >\n      </div>\n      <div class=\"column\">\n        <InputElement\n          type=\"text\"\n          :isFacility=\"true\"\n          currencyPlaceholder=\"€\"\n          :value=\"ConvertToCommas(item.column4)\"\n          @update:value=\"$emit('onColumnInput', { item: $event, index: index, type: type, keyName: 'column4' })\"\n          >Column IV</InputElement\n        >\n      </div>\n      <div class=\"button-wrap\">\n        <Button\n          v-if=\"item['type'] == 'add'\"\n          :text=\"$t('_generalTerms.add')\"\n          class=\"add-button active\"\n          buttonType=\"light add--left\"\n          @onClick=\"$emit('add', { index: index, type: type, typeOf: item['typeOf'] })\"\n        />\n        <Button\n          v-else\n          :text=\"$t('_generalTerms.delete')\"\n          buttonType=\"light close--left\"\n          @onClick=\"$emit('delete', { index: index, type: type })\"\n        />\n      </div>\n    </div>\n  </div>\n</template>\n<script lang=\"ts\">\nimport { defineComponent } from 'vue'\nimport InputElement from '@/components/UI/Input.vue'\nimport Button from '@/components/UI/Button.vue'\nimport { taxSettingsType } from '@/types'\nimport ConvertToCommas from '@/filters/ConvertToCommas'\nexport default defineComponent({\n  props: {\n    facility: {\n      type: Array as () => taxSettingsType[],\n      default: () => []\n    },\n    type: {\n      type: String,\n      default: ''\n    },\n    typeOf: {\n      type: String,\n      default: ''\n    }\n  },\n  components: {\n    InputElement,\n    Button\n  },\n  setup(props) {\n    const getFacilityProp = () => {\n      let facilityType\n      if (props.type == 'chargingFacility') {\n        facilityType = 'chargingFacility'\n      } else {\n        facilityType = 'accessory'\n      }\n      return facilityType\n    }\n    return { getFacilityProp, ConvertToCommas }\n  }\n})\n</script>\n<style lang=\"sass\" scoped>\n.add-facilities\n  display: flex\n  flex-direction: column\n  flex: 1\n  margin: 2em 0 0 0\n  .wrap\n    display: flex\n    margin: 0 0 3em 0\n    align-items: flex-end\n    @media screen and (max-width: $mdBreakpoint)\n      flex-direction: column\n    .column\n      flex: 1.3\n      margin-right: 4em\n      position: relative\n      @media screen and (max-width: $mdBreakpoint)\n        width: 100%\n        margin-right: 0\n        margin-bottom: 2em\n        flex: initial\n    .button-wrap\n      display: flex\n      flex: 1\n      justify-content: flex-end\n    .column\n      height: 52px\n  .add-button\n    color: $colorWhite\n    pointer-events: none\n  button\n    height: 44px\n    padding: 0.5em 1.5em\n  .add-button.active\n    pointer-events: visible\n    color: $colorHubble\n    &:before\n      background-image: url(~@/assets/dark-plus.svg)\n</style>\n"]}]}