{"remainingRequest":"/home/tamanna/htdocs/carconfiguratorfrontend/node_modules/babel-loader/lib/index.js!/home/tamanna/htdocs/carconfiguratorfrontend/node_modules/vue-loader-v16/dist/templateLoader.js??ref--6!/home/tamanna/htdocs/carconfiguratorfrontend/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/tamanna/htdocs/carconfiguratorfrontend/node_modules/vue-loader-v16/dist/index.js??ref--0-1!/home/tamanna/htdocs/carconfiguratorfrontend/src/components/Step1/wizard10.vue?vue&type=template&id=1a79b0e4&scoped=true","dependencies":[{"path":"/home/tamanna/htdocs/carconfiguratorfrontend/src/components/Step1/wizard10.vue","mtime":1678204643790},{"path":"/home/tamanna/htdocs/carconfiguratorfrontend/node_modules/cache-loader/dist/cjs.js","mtime":1691610247617},{"path":"/home/tamanna/htdocs/carconfiguratorfrontend/node_modules/babel-loader/lib/index.js","mtime":1691610247572},{"path":"/home/tamanna/htdocs/carconfiguratorfrontend/node_modules/vue-loader-v16/dist/templateLoader.js","mtime":1691610261934},{"path":"/home/tamanna/htdocs/carconfiguratorfrontend/node_modules/cache-loader/dist/cjs.js","mtime":1691610247617},{"path":"/home/tamanna/htdocs/carconfiguratorfrontend/node_modules/vue-loader-v16/dist/index.js","mtime":1691610261934}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IHsgcmVzb2x2ZUNvbXBvbmVudCBhcyBfcmVzb2x2ZUNvbXBvbmVudCwgY3JlYXRlVk5vZGUgYXMgX2NyZWF0ZVZOb2RlLCBvcGVuQmxvY2sgYXMgX29wZW5CbG9jaywgY3JlYXRlQmxvY2sgYXMgX2NyZWF0ZUJsb2NrLCB3aXRoU2NvcGVJZCBhcyBfd2l0aFNjb3BlSWQgfSBmcm9tICJ2dWUiOwoKdmFyIF93aXRoSWQgPSAvKiNfX1BVUkVfXyovX3dpdGhTY29wZUlkKCJkYXRhLXYtMWE3OWIwZTQiKTsKCmV4cG9ydCB2YXIgcmVuZGVyID0gLyojX19QVVJFX18qL193aXRoSWQoZnVuY3Rpb24gKF9jdHgsIF9jYWNoZSwgJHByb3BzLCAkc2V0dXAsICRkYXRhLCAkb3B0aW9ucykgewogIHZhciBfY29tcG9uZW50X1dpemFyZENhckJyYW5kc01vZGVsID0gX3Jlc29sdmVDb21wb25lbnQoIldpemFyZENhckJyYW5kc01vZGVsIik7CgogIHJldHVybiBfb3BlbkJsb2NrKCksIF9jcmVhdGVCbG9jayhfY29tcG9uZW50X1dpemFyZENhckJyYW5kc01vZGVsLCB7CiAgICBpc0ZpbHRlcjogX2N0eC5pc0ZpbHRlciwKICAgIHNlbGVjdGVkQnJhbmRzOiBfY3R4LnNlbGVjdGVkQnJhbmRzWyd2YWx1ZSddLAogICAgb25PbkNoZWNrOiBfY3R4LkFkZEJyYW5kcywKICAgIG9uUmVtb3ZlQnJhbmQ6IF9jdHgucmVtb3ZlQnJhbmQsCiAgICBvblJlbW92ZUFsbEJyYW5kczogX2N0eC5yZW1vdmVBbGxCcmFuZHMKICB9LCBudWxsLCA4CiAgLyogUFJPUFMgKi8KICAsIFsiaXNGaWx0ZXIiLCAic2VsZWN0ZWRCcmFuZHMiLCAib25PbkNoZWNrIiwgIm9uUmVtb3ZlQnJhbmQiLCAib25SZW1vdmVBbGxCcmFuZHMiXSk7Cn0pOw=="},{"version":3,"sources":["/home/tamanna/htdocs/carconfiguratorfrontend/src/components/Step1/wizard10.vue"],"names":[],"mappings":";;;;;;;uBACE,YAAA,CAME,+BANF,EAME;AALC,IAAA,QAAQ,EAAE,IAAA,CAAA,QAKX;AAJC,IAAA,cAAc,EAAE,IAAA,CAAA,cAAA,CAAc,OAAd,CAIjB;AAHC,IAAA,SAAO,EAAE,IAAA,CAAA,SAGV;AAFC,IAAA,aAAW,EAAE,IAAA,CAAA,WAEd;AADC,IAAA,iBAAe,EAAE,IAAA,CAAA;AAClB,GANF,E,IAAA,E;;AAAA,I,iFAAA,C","sourcesContent":["<template>\n  <WizardCarBrandsModel\n    :isFilter=\"isFilter\"\n    :selectedBrands=\"selectedBrands['value']\"\n    @onCheck=\"AddBrands\"\n    @removeBrand=\"removeBrand\"\n    @removeAllBrands=\"removeAllBrands\"\n  />\n</template>\n<script lang=\"ts\">\nimport { defineComponent, reactive, watch } from 'vue'\nimport WizardCarBrandsModel from '@/components/WizardCarBrandsModels.vue'\nimport { carBrandsModelType } from '@/types'\nimport _ from 'lodash'\nexport default defineComponent({\n  emits: ['selectedBrands'],\n  props: {\n    isFilter: {\n      type: Boolean,\n      default: false\n    }\n  },\n  components: {\n    WizardCarBrandsModel\n  },\n  setup(props, { emit }) {\n    const getBrandsOnly = (brandModelsArray) => {\n      return brandModelsArray.map((item) => {\n        return item.brand\n      })\n    }\n    const selectedBrands = sessionStorage.getItem('brands')\n      ? reactive({ value: getBrandsOnly(JSON.parse(sessionStorage.getItem('brands') || '[]')) })\n      : reactive({ value: [] })\n    const removeBrand = (brand) => {\n      if (selectedBrands.value.indexOf(brand) !== -1) {\n        selectedBrands.value.splice(selectedBrands.value.indexOf(brand), 1)\n      }\n    }\n    const removeAllBrands = () => {\n      if (sessionStorage.getItem('car_policy_brands_models')) {\n        const brandsModelsArray = JSON.parse(sessionStorage.getItem('car_policy_brands_models') || '')\n        const filteredArray = brandsModelsArray.map((item) => {\n          return item.brand\n        })\n        selectedBrands.value = filteredArray\n      } else {\n        selectedBrands.value.splice(0, selectedBrands.value.length)\n      }\n    }\n    const getFilteredBrands = (selectedBrands) => {\n      let filteredBrandsModel: carBrandsModelType[] = []\n      if (sessionStorage.getItem('car_policy_brands_models')) {\n        const brandsModelsArray = JSON.parse(sessionStorage.getItem('car_policy_brands_models') || '')\n        const filteredArray = brandsModelsArray.filter((item) => {\n          return selectedBrands.includes(item.brand)\n        })\n        filteredBrandsModel = filteredArray\n      } else {\n        selectedBrands.forEach((item) => {\n          filteredBrandsModel.push({ brand: item, models: [] })\n        })\n      }\n      return filteredBrandsModel\n    }\n    watch(\n      () => _.cloneDeep(selectedBrands.value),\n      (currentValue) => {\n        emit('selectedBrands', selectedBrands.value)\n        if (!currentValue.length && !sessionStorage.getItem('car_policy_brands_models')) sessionStorage.removeItem('brands')\n        else if (!currentValue.length && sessionStorage.getItem('car_policy_brands_models') ) {\n          sessionStorage.setItem('brands', JSON.stringify(JSON.parse(sessionStorage.getItem('car_policy_brands_models') || '')))\n        }\n        else sessionStorage.setItem('brands', JSON.stringify(getFilteredBrands(currentValue)))\n      }\n    )\n    const AddBrands = ($event) => {\n      const value = $event.target.value\n      if ($event.target.checked) {\n        if (selectedBrands.value.indexOf(value) === -1) {\n          selectedBrands.value.push(value)\n        }\n      } else {\n        removeBrand(value)\n      }\n    }\n    return { AddBrands, removeBrand, removeAllBrands, selectedBrands }\n  }\n})\n</script>\n<style lang=\"sass\" scoped>\n.wizards\n  .logo\n    position: absolute\n    right: 8px\n    width: 4em\n    height: 100%\n    img\n      transform: translateY(-50%)\n      top: 50%\n      position: absolute\n      left: 0\n      right: 0\n      margin: auto\n.active-search\n  box-shadow: 1px 1px 10px rgba(44, 0, 171, 0.2)\n  border-radius: 5px\n  .search-brands\n    &:after\n      content: \"\"\n      border-bottom: 1px solid $borderColor\n      content: \"\"\n      width: 93%\n      position: absolute\n      bottom: 0\n      margin: auto\n      left: 0\n      right: 0\n    input[type=\"text\"]\n      background-color: $colorWhite\n      border-bottom-left-radius: 0\n      border-bottom-right-radius: 0\n.search-wrap\n  height: 42em\n.search-brands\n  display: flex\n  position: relative\n.dropdown\n  display: flex\n  flex-direction: column\n  padding: 0 1em 0 2.3em\n  @media screen and (max-width: $xsBreakpoint)\n    padding-left: 1.3em\n  h4\n    color: $colorHubbleDarkGrey\n    font-weight: normal\n    font-size: 1.4em\n    margin: 0.5em 0\n  .brand-main-wrap\n    display: flex\n    max-height: 33em\n    overflow-y: scroll\n    padding: 0 1.2em 0 0\n    flex-direction: column\n    &::-webkit-scrollbar\n      width: 6px\n    &::-webkit-scrollbar-thumb\n      background: $colorHubble\n      border-radius: 10px\n    &::-webkit-scrollbar-track\n      background: $colorHubbleGreyLines\n      border-radius: 10px\n    .popular-brands, .other-brand\n      display: flex\n      flex-wrap: wrap\n      div.brand\n        flex-basis: 47.2%\n        margin-bottom: 1em\n        &:nth-child(2n + 1)\n          margin-right: 5.5%\n        @media screen and (max-width: $xsBreakpoint)\n          flex-basis: 100%\n          &:nth-child(2n + 1)\n            margin-right: 0\n          .wizards\n            padding-right: 0\n.selected-brands\n  display: flex\n  flex-direction: column\n  h4\n    display: flex\n    align-items: center\n    margin: 1.7em 0 0\n    font-size: 15px\n    font-family: 'Lato-semibold'\n    color: $colorHubbleText\n    overflow: hidden\n    &:after\n      content: \"\"\n      border-bottom: 1px solid $colorHubbleGreyLines\n      flex: 1\n      position: relative\n      left: 8px\n  ul\n    display: flex\n    flex-wrap: wrap\n    padding: 0\n    margin: 0.5em 0 0\n    li\n    &.remove-all\n      background-color: $colorHubbleLightBackground\n      border: none\n    li\n      display: flex\n      align-items: center\n      border: 1px solid $colorHubble\n      color: $colorHubble\n      line-height: 18px\n      font-size: 15px\n      font-family: 'Lato-semibold'\n      align-items: center\n      padding: 0.6em 1em\n      border-radius: 5px\n      margin: 0 0.6em 0.6em 0\n      span.remove-icon\n        cursor: pointer\n        @include backgroundImage('close.svg')\n        width: 11px\n        height: 12px\n        margin-left: 6px\n</style>       "],"sourceRoot":""}]}